"use strict";function cleanUp(){helper.cleanUp(["fail/node_modules","fail/lib/added.js"])}var grunt=require("grunt"),path=require("path"),fs=require("fs"),helper=require("./helper"),fixtures=helper.fixtures;exports.fail={setUp:function(e){cleanUp();fs.symlinkSync(path.join(__dirname,"../../node_modules"),path.join(fixtures,"fail","node_modules"));e()},tearDown:function(e){cleanUp();e()},warn:function(e){e.expect(1);var t=path.resolve(fixtures,"fail"),n=helper.assertTask("watch:warn",{cwd:t});n([function(){grunt.file.write(path.join(t,"lib/one.js"),"var one = true;")},function(){grunt.file.write(path.join(t,"lib/one.js"),"var one = true;")}],function(t){helper.verboseLog(t);e.ok(t.match(/This task should warn/g).length===2,"grunt.warn should not stop the watch task.");e.done()})},fatal:function(e){e.expect(1);var t=path.resolve(fixtures,"fail"),n=helper.assertTask("watch:fatal",{cwd:t});n([function(){grunt.file.write(path.join(t,"lib/one.js"),"var one = true;")},function(){grunt.file.write(path.join(t,"lib/one.js"),"var one = true;")}],function(t){helper.verboseLog(t);e.ok(t.match(/This task should be fatal/g).length===2,"grunt.fatal should not stop the watch task.");e.done()})}};