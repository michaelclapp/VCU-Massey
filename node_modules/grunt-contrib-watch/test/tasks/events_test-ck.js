"use strict";function cleanUp(){helper.cleanUp(["events/node_modules","events/lib/added.js"])}function writeAll(e){var t="var one = true;";grunt.file.write(path.join(e,"lib","added.js"),t);setTimeout(function(){grunt.file.write(path.join(e,"lib","one.js"),t)},300);setTimeout(function(){grunt.file.delete(path.join(e,"lib","added.js"))},300)}var grunt=require("grunt"),path=require("path"),fs=require("fs"),helper=require("./helper"),fixtures=helper.fixtures;exports.events={setUp:function(e){cleanUp();fs.symlinkSync(path.join(__dirname,"../../node_modules"),path.join(fixtures,"events","node_modules"));e()},tearDown:function(e){cleanUp();e()},events:function(e){e.expect(3);var t=path.resolve(fixtures,"events"),n=helper.assertTask("watch:all",{cwd:t});n([function(){writeAll(t)}],function(t){t=helper.unixify(t);helper.verboseLog(t);e.ok(t.indexOf("lib/added.js was indeed added")!==-1,"event not emitted when file added");e.ok(t.indexOf("lib/one.js was indeed changed")!==-1,"event not emitted when file changed");e.ok(t.indexOf("lib/added.js was indeed deleted")!==-1,"event not emitted when file deleted");e.done()})},onlyAdded:function(e){e.expect(3);var t=path.resolve(fixtures,"events"),n=helper.assertTask("watch:onlyAdded",{cwd:t});n([function(){writeAll(t)}],function(t){t=helper.unixify(t);helper.verboseLog(t);e.ok(t.indexOf("lib/added.js was indeed added")!==-1,"event not emitted when file added");e.ok(t.indexOf("lib/one.js was indeed changed")===-1,"event should NOT have emitted when file changed");e.ok(t.indexOf("lib/added.js was indeed deleted")===-1,"event should NOT have emitted when file deleted");e.done()})},onlyChanged:function(e){e.expect(3);var t=path.resolve(fixtures,"events"),n=helper.assertTask("watch:onlyChanged",{cwd:t});n([function(){writeAll(t)}],function(t){t=helper.unixify(t);helper.verboseLog(t);e.ok(t.indexOf("lib/added.js was indeed added")===-1,"event should NOT have emitted when file added");e.ok(t.indexOf("lib/one.js was indeed changed")!==-1,"event should have emitted when file changed");e.ok(t.indexOf("lib/added.js was indeed deleted")===-1,"event should NOT have emitted when file deleted");e.done()})},onlyDeleted:function(e){e.expect(3);var t=path.resolve(fixtures,"events"),n=helper.assertTask("watch:onlyDeleted",{cwd:t});n([function(){writeAll(t)}],function(t){t=helper.unixify(t);helper.verboseLog(t);e.ok(t.indexOf("lib/added.js was indeed added")===-1,"event should NOT have emitted when file added");e.ok(t.indexOf("lib/one.js was indeed changed")===-1,"event should NOT have emitted when file changed");e.ok(t.indexOf("lib/added.js was indeed deleted")!==-1,"event should have emitted when file deleted");e.done()})},onlyAddedAndDeleted:function(e){e.expect(3);var t=path.resolve(fixtures,"events"),n=helper.assertTask("watch:onlyAddedAndDeleted",{cwd:t});n([function(){writeAll(t)}],function(t){t=helper.unixify(t);helper.verboseLog(t);e.ok(t.indexOf("lib/added.js was indeed added")!==-1,"event should have emitted when file added");e.ok(t.indexOf("lib/one.js was indeed changed")===-1,"event should NOT have emitted when file changed");e.ok(t.indexOf("lib/added.js was indeed deleted")!==-1,"event should have emitted when file deleted");e.done()})},targetSpecific:function(e){e.expect(2);var t=path.resolve(fixtures,"events"),n=helper.assertTask("watch",{cwd:t});n([function(){var e="var test = false;";setTimeout(function(){grunt.file.write(path.join(t,"lib/one","test.js"),e)},300);setTimeout(function(){grunt.file.write(path.join(t,"lib/two","test.js"),e)},300)}],function(t){t=helper.unixify(t);helper.verboseLog(t);e.ok(t.indexOf("lib/one/test.js was indeed changed\ntargetOne specifc event was fired")!==-1,"event should have been emitted with targetOne specified");e.ok(t.indexOf("lib/two/test.js was indeed changed\ntargetTwo specifc event was fired")!==-1,"event should have been emitted with targetTwo specified");e.done()})}};