"use strict";function cleanUp(){helper.cleanUp(["livereload/node_modules"])}function request(e,t){var n="",r=http.request({hostname:"localhost",port:e},function(e){e.setEncoding("utf8");e.on("data",function(e){n+=e});e.on("end",function(){t(n)})});r.end()}var grunt=require("grunt"),path=require("path"),fs=require("fs"),http=require("http"),helper=require("./helper"),fixtures=helper.fixtures;exports.livereload={setUp:function(e){cleanUp();fs.symlinkSync(path.join(__dirname,"../../node_modules"),path.join(fixtures,"livereload","node_modules"));e()},tearDown:function(e){cleanUp();e()},basic:function(e){e.expect(4);var t="",n=path.resolve(fixtures,"livereload"),r=helper.assertTask(["watch:basic","-v"],{cwd:n});r([function(){request(35729,function(e){t+=e;grunt.file.write(path.join(n,"lib","one.js"),"var one = true;")})}],function(n){n=helper.unixify(n);helper.verboseLog(n);e.ok(n.indexOf("I ran before livereload.")!==-1,"task should have ran before live reload.");e.ok(n.indexOf("Live reload server started on port: 35729")!==-1,"live reload server should have been started on port 35729.");e.ok(n.indexOf("Live reloading lib/one.js...")!==-1,"live reload should have triggered on lib/one.js");t=JSON.parse(t);e.equal(t.tinylr,"Welcome","tinylr server should have welcomed you.");e.done()})},customport:function(e){e.expect(4);var t="",n=path.resolve(fixtures,"livereload"),r=helper.assertTask(["watch:customport","-v"],{cwd:n});r([function(){request(8675,function(e){t+=e;grunt.file.write(path.join(n,"lib","one.js"),"var one = true;")})}],function(n){n=helper.unixify(n);helper.verboseLog(n);e.ok(n.indexOf("I ran before livereload.")!==-1,"task should have ran before live reload.");e.ok(n.indexOf("Live reload server started on port: 8675")!==-1,"live reload server should have been started on port 35729.");e.ok(n.indexOf("Live reloading lib/one.js...")!==-1,"live reload should have triggered on lib/one.js");t=JSON.parse(t);e.equal(t.tinylr,"Welcome","tinylr server should have welcomed you.");e.done()})},multiplefiles:function(e){e.expect(4);var t="",n=path.resolve(fixtures,"livereload"),r=helper.assertTask(["watch:multiplefiles","-v"],{cwd:n});r([function(){request(9876,function(e){t+=e;grunt.file.write(path.join(n,"lib","one.js"),"var one = true;");grunt.file.write(path.join(n,"lib","two.js"),"var two = true;")})}],function(n){n=helper.unixify(n);helper.verboseLog(n);e.ok(n.indexOf("I ran before livereload.")!==-1,"task should have ran before live reload.");e.ok(n.indexOf("Live reload server started on port: 9876")!==-1,"live reload server should have been started on port 35729.");e.ok(/Live reloading (lib\/one\.js, lib\/two.js|lib\/two.js, lib\/one.js)\.\.\./.test(n),"live reload should have triggered on lib/one.js and lib/two.js");t=JSON.parse(t);e.equal(t.tinylr,"Welcome","tinylr server should have welcomed you.");e.done()})},nospawn:function(e){e.expect(4);var t="",n=path.resolve(fixtures,"livereload"),r=helper.assertTask(["watch:nospawn","-v"],{cwd:n});r([function(){request(1337,function(e){t+=e;grunt.file.write(path.join(n,"lib","one.js"),"var one = true;")})}],function(n){n=helper.unixify(n);helper.verboseLog(n);e.ok(n.indexOf("I ran before livereload.")!==-1,"task should have ran before live reload.");e.ok(n.indexOf("Live reload server started on port: 1337")!==-1,"live reload server should have been started on port 1337.");e.ok(n.indexOf("Live reloading lib/one.js...")!==-1,"live reload should have triggered on lib/one.js");t=JSON.parse(t);e.equal(t.tinylr,"Welcome","tinylr server should have welcomed you.");e.done()})},notasks:function(e){e.expect(3);var t="",n=path.resolve(fixtures,"livereload"),r=helper.assertTask(["watch:notasks","-v"],{cwd:n});r([function(){request(35729,function(e){t+=e;grunt.file.write(path.join(n,"lib","one.js"),"var one = true;")})}],function(n){n=helper.unixify(n);helper.verboseLog(n);e.ok(n.indexOf("Live reload server started on port: 35729")!==-1,"live reload server should have been started on port 35729.");e.ok(n.indexOf("Live reloading lib/one.js...")!==-1,"live reload should have triggered on lib/one.js");t=JSON.parse(t);e.equal(t.tinylr,"Welcome","tinylr server should have welcomed you.");e.done()})},onlytriggeron:function(e){e.expect(2);var t=path.resolve(fixtures,"livereload"),n=helper.assertTask(["watch","-v"],{cwd:t});n([function(){request(35729,function(e){grunt.file.write(path.join(t,"sass","one.scss"),"#one {}")})}],function(t){t=helper.unixify(t);helper.verboseLog(t);e.ok(t.indexOf("Live reloading sass/one.scss")===-1,"Should not trigger live reload on non livereload targets.");e.ok(t.indexOf("Live reloading css/one.css")!==-1,"Should trigger live reload when other tasks trigger livereload targets.");e.done()})}};