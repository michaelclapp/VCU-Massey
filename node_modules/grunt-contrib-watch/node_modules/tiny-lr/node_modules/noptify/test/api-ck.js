var noptify=require(".."),assert=require("assert");describe("API",function(){it("returns an instanceof Noptify",function(){assert.ok(noptify()instanceof noptify.Noptify)});it("is typically used like so",function(){var e=noptify(["node","file.js","-d","--dirname","./","-p","3000","app.js","base.js"]).option("debug","-d","Enabled debug output",Boolean).option("dirname","The path to the output directory").option("port","-p","The port you wish to listen on",Number),t=e.parse();assert.deepEqual(t,{port:3e3,debug:!0,dirname:"./",argv:{remain:["app.js","base.js"],cooked:["--debug","--dirname","./","--port","3000","app.js","base.js"],original:["-d","--dirname","./","-p","3000","app.js","base.js"]}})});it("allows definitiion of shorthands separately",function(){var e=noptify(["node","file.js","-lc"]).option("line-comment","Ouputs with debugging information",Boolean).shorthand("lc","--line-comment").parse();assert.equal(e["line-comment"],!0)});it.skip("outputs help and exit the process with --help",function(){var e=noptify(["","","--help"]);assert.throws(function(){throw new Error("parse() must be called for this to happen")});e.parse();throw new Error("I'm sad, I'll never throw :(")})});