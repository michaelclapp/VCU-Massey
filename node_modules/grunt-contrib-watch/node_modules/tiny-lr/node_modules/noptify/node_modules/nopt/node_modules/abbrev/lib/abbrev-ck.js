function monkeyPatch(){Object.defineProperty(Array.prototype,"abbrev",{value:function(){return abbrev(this)},enumerable:!1,configurable:!0,writable:!0});Object.defineProperty(Object.prototype,"abbrev",{value:function(){return abbrev(Object.keys(this))},enumerable:!1,configurable:!0,writable:!0})}function abbrev(e){if(arguments.length!==1||!Array.isArray(e))e=Array.prototype.slice.call(arguments,0);for(var t=0,n=e.length,r=[];t<n;t++)r[t]=typeof e[t]=="string"?e[t]:String(e[t]);r=r.sort(lexSort);var i={},s="";for(var t=0,n=r.length;t<n;t++){var o=r[t],u=r[t+1]||"",a=!0,f=!0;if(o===u)continue;for(var l=0,c=o.length;l<c;l++){var h=o.charAt(l);a=a&&h===u.charAt(l);f=f&&h===s.charAt(l);if(!a&&!f){l++;break}}s=o;if(l===c){i[o]=o;continue}for(var p=o.substr(0,l);l<=c;l++){i[p]=o;p+=o.charAt(l)}}return i}function lexSort(e,t){return e===t?0:e>t?1:-1}module.exports=exports=abbrev.abbrev=abbrev;abbrev.monkeyPatch=monkeyPatch;if(module===require.main){var assert=require("assert"),util=require("util");console.log("running tests");function test(e,t){var n=abbrev(e);assert.deepEqual(n,t,"abbrev("+util.inspect(e)+") === "+util.inspect(t)+"\n"+"actual: "+util.inspect(n));n=abbrev.apply(exports,e);assert.deepEqual(abbrev.apply(exports,e),t,"abbrev("+e.map(JSON.stringify).join(",")+") === "+util.inspect(t)+"\n"+"actual: "+util.inspect(n))}test(["ruby","ruby","rules","rules","rules"],{rub:"ruby",ruby:"ruby",rul:"rules",rule:"rules",rules:"rules"});test(["fool","foom","pool","pope"],{fool:"fool",foom:"foom",poo:"pool",pool:"pool",pop:"pope",pope:"pope"});test(["a","ab","abc","abcd","abcde","acde"],{a:"a",ab:"ab",abc:"abc",abcd:"abcd",abcde:"abcde",ac:"acde",acd:"acde",acde:"acde"});console.log("pass")};