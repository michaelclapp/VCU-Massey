function Server(e){e=this.options=e||{};events.EventEmitter.call(this);e.livereload=e.livereload||path.join(__dirname,"public/livereload.js");e.port=parseInt(e.port||35729,10);this.on("GET /",this.index.bind(this));this.on("GET /changed",this.changed.bind(this));this.on("POST /changed",this.changed.bind(this));this.on("GET /livereload.js",this.livereload.bind(this));this.on("GET /kill",this.close.bind(this));this.clients={};this.configure(e.app)}var fs=require("fs"),qs=require("qs"),path=require("path"),util=require("util"),http=require("http"),events=require("events"),parse=require("url").parse,debug=require("debug")("tinylr:server"),Client=require("./client"),constants=require("constants"),config=require("../package.json");module.exports=Server;util.inherits(Server,events.EventEmitter);Server.prototype.configure=function(t){debug("Configuring %s",t?"connect / express application":"HTTP server");if(!t){this.server=http.createServer(this.handler.bind(this));this.server.on("upgrade",this.websocketify.bind(this));this.server.on("error",this.error.bind(this));return this}var n=this;this.app=t;this.app.listen=function(e,r){r=r||function(){};if(e!==n.options.port){debug("Warn: LiveReload port is not standard (%d). You are listening on %d",n.options.port,e);debug("You'll need to rely on the LiveReload snippet");debug("> http://feedback.livereload.com/knowledgebase/articles/86180-how-do-i-add-the-script-tag-manually-")}var i=n.server=http.createServer(t);i.on("upgrade",n.websocketify.bind(n));i.on("error",n.error.bind(n));i.on("close",n.close.bind(n));return i.listen(e,r)};return this};Server.prototype.handler=function(t,n,r){var i=typeof r=="function";debug("LiveReload handler %s (middleware: %s)",t.url,i?"on":"off");if(i){!t.params&&t.query&&(t.params=t.query);this.handle(t,n,r);return this}t.on("end",this.handle.bind(this,t,n)).on("data",function(e){t.data=t.data||"";t.data+=e});return this};Server.prototype.handle=function(t,n,r){var i=parse(t.url),s=typeof r=="function";t.body={};t.params={};try{t.body=JSON.parse(t.data)}catch(o){}i.query&&(t.params=qs.parse(i.query));n.setHeader("Content-Type","application/json");var u=t.method+" "+i.pathname,a=this.emit(u,t,n);if(a)return;if(s)return r();n.writeHead(404);n.write(JSON.stringify({error:"not_found",reason:"no such route"}));n.end()};Server.prototype.websocketify=function(t,n,r){var i=this,s=new Client(t,n,r);this.clients[s.id]=s;debug("New LiveReload connection (id: %s)",s.id);s.on("end",function(){debug("Destroy client %s (url: %s)",s.id,s.url);delete i.clients[s.id]})};Server.prototype.listen=function(t,n){this.port=t;this.server.listen(t,n)};Server.prototype.close=function(t,n){n&&n.end();Object.keys(this.clients).forEach(function(e){this.clients[e].close()},this);this.server._handle&&this.server.close(this.emit.bind(this,"close"))};Server.prototype.error=function(t){console.error();console.error("... Uhoh. Got error %s ...",t.message);console.error(t.stack);if(t.code!==constants.EADDRINUSE)return;console.error();console.error("You already have a server listening on %s",this.port);console.error("You should stop it and try again.");console.error()};Server.prototype.livereload=function(t,n){fs.createReadStream(this.options.livereload).pipe(n)};Server.prototype.changed=function(t,n){var r=[];t&&t.body&&t.body.files&&(r=t.body.files);t&&t.params&&t.params.files&&(r=t.params.files);r=Array.isArray(r)?r:typeof r=="string"?r.split(/[\s,]/):[];debug("Changed event (Files: %s)",r.join(" "));var i=Object.keys(this.clients).map(function(e){var t=this.clients[e];debug("Reloading client %s (url: %s)",t.id,t.url);t.reload(r);return{id:t.id,url:t.url}},this);if(!n)return;n.write(JSON.stringify({clients:i,files:r}));n.end()};Server.prototype.index=function(t,n){n.write(JSON.stringify({tinylr:"Welcome",version:config.version}));n.end()};