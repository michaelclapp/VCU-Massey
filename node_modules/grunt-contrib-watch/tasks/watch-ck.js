/*
 * grunt-contrib-watch
 * http://gruntjs.com/
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman, contributors
 * Licensed under the MIT license.
 */var path=require("path"),Gaze=require("gaze").Gaze,waiting="Waiting...",changedFiles=Object.create(null),watchers=[];module.exports=function(e){"use strict";var t=require("./lib/taskrunner")(e),n=function(t){e.log.writeln(String("Completed in "+t.toFixed(3)+"s at "+(new Date).toString()).cyan+" - "+waiting)};t.on("start",function(){e.log.ok();Object.keys(changedFiles).forEach(function(t){e.log.ok('File "'+t+'" '+changedFiles[t]+".")});e.log.writeln();changedFiles=Object.create(null)});t.on("end",function(e){e>0&&n(e)});t.on("interrupt",function(){e.log.writeln("").write("Scheduled tasks have been interrupted...".yellow)});t.on("reload",function(){t.clearRequireCache(Object.keys(changedFiles));e.log.writeln("").writeln("Reloading watch config...".cyan)});e.registerTask("watch","Run predefined tasks whenever watched files change.",function(r){var i=this,s=i.name||"watch";watchers.forEach(function(e){e.close()});watchers=[];e.config([s,"options","forever"])!==!1&&t.forever();var o=e.config([s,"options","dateFormat"]);typeof o=="function"&&(n=o);t.running===!1&&e.log.write(waiting);var u=t.init(s,{target:r});u.forEach(function(n,r){typeof n.files=="string"&&(n.files=[n.files]);var i=e.util._.chain(n.files).flatten().map(function(t){return e.config.process(t)}).value();typeof n.options.event=="string"&&(n.options.event=[n.options.event]);watchers.push(new Gaze(i,n.options,function(r){if(r){typeof r=="string"&&(r=new Error(r));e.log.writeln("ERROR".red);e.fatal(r);return t.done()}if(e.option("verbose")){var i=this.watched();Object.keys(i).forEach(function(t){i[t].forEach(function(t){e.log.writeln("Watching "+path.relative(process.cwd(),t)+" for changes.")})})}this.on("all",function(r,i){if(!e.util._.contains(n.options.event,"all")&&!e.util._.contains(n.options.event,r))return;i=path.relative(process.cwd(),i);if(i==="")return;/gruntfile\.(js|coffee)/i.test(i)&&(t.reload=!0);e.event.listeners("watch").length>0&&e.event.emit("watch",r,i,n.name);changedFiles[i]=r;if(t.targets[n.name]){t.targets[n.name].changedFiles||(t.targets[n.name].changedFiles=Object.create(null));t.targets[n.name].changedFiles[i]=r}t.queue.indexOf(n.name)===-1&&t.queue.push(n.name);t.run()});this.on("error",function(t){typeof t=="string"&&(t=new Error(t));e.log.error(t.message)})}))})})};