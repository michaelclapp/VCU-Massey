var grunt=require("grunt"),path=require("path"),gruntTextReplace={};exports.replace=function(e){gruntTextReplace.replace(e)};exports.replaceText=function(e){var t=e.text,n=e.replacements;return gruntTextReplace.replaceTextMultiple(t,n)};exports.replaceFile=function(e){return gruntTextReplace.replaceFile(e)};exports.replaceFileMultiple=function(e){return gruntTextReplace.replaceFileMultiple(e)};gruntTextReplace={replaceFileMultiple:function(e){var t=grunt.file.expand(e.src);t.forEach(function(t){gruntTextReplace.replaceFile({src:t,dest:e.dest,replacements:e.replacements})})},replaceFile:function(e){var t=e.src,n=this.getPathToDestination(t,e.dest),r=e.replacements;grunt.file.copy(t,n,{process:function(e){return gruntTextReplace.replaceTextMultiple(e,r)}})},replaceTextMultiple:function(e,t){return t.reduce(function(e,t){return gruntTextReplace.replaceText({text:e,from:t.from,to:t.to})},e)},replaceText:function(e){var t=e.text,n=this.convertPatternToRegex(e.from),r=this.expandReplacement(e.to);return t.replace(n,r)},replace:function(e){var t=grunt.file.expand(e.src||[]),n=e.dest,r=e.overwrite,i=e.replacements,s=/\/$/.test(n),o=grunt.fail.warncount;typeof n=="undefined"&&typeof t=="undefined"&&typeof i=="undefined"?grunt.warn(gruntTextReplace.errorMessages.noTargetsDefined):typeof n=="undefined"&&r!==!0?grunt.warn(gruntTextReplace.errorMessages.noDestination):typeof i=="undefined"?grunt.warn(gruntTextReplace.errorMessages.noReplacements):typeof n!="undefined"&&r===!0?grunt.warn(gruntTextReplace.errorMessages.overwriteFailure):s===!1&&t.length>1&&r!==!0?grunt.warn(gruntTextReplace.errorMessages.multipleSourceSingleDestination):grunt.fail.warncount-o===0&&gruntTextReplace.replaceFileMultiple({src:t,dest:n,replacements:i})},errorMessages:{noTargetsDefined:"No targets were found. Remember to wrap functionality within a target.",noDestination:"Destination is not defined! If you want to overwrite files, then make sure to set overwrite: true. If you don't wish to overwrite, then make sure to set a destination",noReplacements:"No replacements were found.",overwriteFailure:"Overwrite is to true, but a destination has also been defined. If you want to overwrite files, remove the destination. If you want to send files to a destination, then ensure overwrite is not set to true",multipleSourceSingleDestination:"Cannot write multiple files to same file. If you wish to export to a directory, make sure there is a trailing slash on the destination. If you wish to write to a single file, make sure there is only one source file"},getPathToDestination:function(e,t){var n=/\/$/.test(t),r=path.basename(e),i;typeof t=="undefined"?i=e:i=t+(n?r:"");return i},convertPatternToRegex:function(e){var t="\\[](){}^$-.*+?|,/";if(typeof e=="string"){t.split("").forEach(function(t){var n=new RegExp("(\\"+t+")","g");e=e.replace(n,"\\$1")});e=new RegExp(e,"g")}return e},expandReplacement:function(e){if(typeof e=="function")return this.expandFunctionReplacement(e);if(typeof e=="string")return this.expandStringReplacement(e)},expandFunctionReplacement:function(e){return function(){var t=arguments[0],n=arguments[arguments.length-2],r=arguments[arguments.length-1],i=Array.prototype.slice.call(arguments,1,arguments.length-2),s=e(t,n,r,i);return typeof s=="string"?gruntTextReplace.processGruntTemplate(s):s}},expandStringReplacement:function(e){return gruntTextReplace.processGruntTemplate(e)},processGruntTemplate:function(e){var t=!0;grunt.task.current.data&&grunt.task.current.data.options&&typeof grunt.task.current.data.options.processTemplates!="undefined"&&grunt.task.current.data.options.processTemplates===!1&&(t=!1);return t?grunt.template.process(e):e}};