function wrap_request(e,t){var n={};Object.keys(t).forEach(function(r){var i=t[r];r!="request"?n[r]=i:n[r]=function(t,n){faux_requests_made[e]+=1;return i.apply(this,arguments)}});return n}function run_tests(e){var t="http://localhost:"+plain_server.port+"/to_https",n="https://localhost:"+https_server.port+"/to_plain";request(t,{httpModules:e,strictSSL:!1},function(e,t,n){if(e)throw e;assert.equal(n,"https","Received HTTPS server body");done()});request(n,{httpModules:e,strictSSL:!1},function(e,t,n){if(e)throw e;assert.equal(n,"plain","Received HTTPS server body");done()})}function done(){passed+=1;var e=10;if(passed==e){plain_server.close();https_server.close();assert.equal(faux_requests_made.http,4,"Wrapped http module called appropriately");assert.equal(faux_requests_made.https,4,"Wrapped https module called appropriately");console.log(e+2+" tests passed.")}}var http=require("http"),https=require("https"),server=require("./server"),assert=require("assert"),request=require("../index"),faux_requests_made={http:0,https:0},faux_http=wrap_request("http",http),faux_https=wrap_request("https",https),plain_server=server.createServer(),https_server=server.createSSLServer();plain_server.listen(plain_server.port,function(){plain_server.on("/plain",function(e,t){t.writeHead(200);t.end("plain")});plain_server.on("/to_https",function(e,t){t.writeHead(301,{location:"https://localhost:"+https_server.port+"/https"});t.end()});https_server.listen(https_server.port,function(){https_server.on("/https",function(e,t){t.writeHead(200);t.end("https")});https_server.on("/to_plain",function(e,t){t.writeHead(302,{location:"http://localhost:"+plain_server.port+"/plain"});t.end()});run_tests();run_tests({});run_tests({"http:":faux_http});run_tests({"https:":faux_https});run_tests({"http:":faux_http,"https:":faux_https})})});var passed=0;