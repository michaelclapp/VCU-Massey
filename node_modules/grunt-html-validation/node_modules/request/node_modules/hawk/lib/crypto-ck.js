// Load modules
var Crypto=require("crypto"),Url=require("url"),Utils=require("./utils"),internals={};exports.headerVersion="1";exports.algorithms=["sha1","sha256"];exports.calculateMac=function(e,t,n){var r=exports.generateNormalizedString(e,n),i=Crypto.createHmac(t.algorithm,t.key).update(r),s=i.digest("base64");return s};exports.generateNormalizedString=function(e,t){var n="hawk."+exports.headerVersion+"."+e+"\n"+t.ts+"\n"+t.nonce+"\n"+(t.method||"").toUpperCase()+"\n"+(t.resource||"")+"\n"+t.host.toLowerCase()+"\n"+t.port+"\n"+(t.hash||"")+"\n";t.ext&&(n+=t.ext.replace("\\","\\\\").replace("\n","\\n"));n+="\n";t.app&&(n+=t.app+"\n"+(t.dlg||"")+"\n");return n};exports.calculatePayloadHash=function(e,t,n){var r=exports.initializePayloadHash(t,n);r.update(e||"");return exports.finalizePayloadHash(r)};exports.initializePayloadHash=function(e,t){var n=Crypto.createHash(e);n.update("hawk."+exports.headerVersion+".payload\n");n.update(Utils.parseContentType(t)+"\n");return n};exports.finalizePayloadHash=function(e){e.update("\n");return e.digest("base64")};exports.calculateTsMac=function(e,t){var n=Crypto.createHmac(t.algorithm,t.key);n.update("hawk."+exports.headerVersion+".ts\n"+e+"\n");return n.digest("base64")};