// Load modules
var Lab=require("lab"),Hoek=require("../lib"),internals={},expect=Lab.expect,before=Lab.before,after=Lab.after,describe=Lab.experiment,it=Lab.test;describe("Hoek",function(){var e={v:[7,8,9],w:/^something$/igm,x:{a:[1,2,3],b:123456,c:new Date,d:/hi/igm,e:/hello/},y:"y",z:new Date},t=[e,{z:"z"},e],n=[e,{z:"z"}];describe("#clone",function(){it("should clone a nested object",function(t){var n=e,r=Hoek.clone(n);expect(n).to.deep.equal(r);expect(n.z.getTime()).to.equal(r.z.getTime());t()});it("should clone a null object",function(e){var t=Hoek.clone(null);expect(t).to.equal(null);e()});it("should not convert undefined properties to null",function(e){var t={something:undefined},n=Hoek.clone(t);expect(typeof n.something).to.equal("undefined");e()});it("should not throw on circular reference",function(e){var t={};t.x=t;var n=function(){var e=Hoek.clone(t)};expect(n).to.not.throw();e()});it("should properly clone circular reference",function(e){var t={z:new Date};t.y=t;var n=Hoek.clone(t);expect(Object.keys(n.y)).to.deep.equal(Object.keys(t));expect(n.z).to.not.equal(t.z);expect(n.y).to.not.equal(t.y);expect(n.y.z).to.not.equal(t.y.z);expect(n.y).to.equal(n);expect(n.y.y.y.y).to.equal(n);e()});it("should properly clone deeply nested object",function(e){var t={x:{y:{a:[1,2,3],b:123456,c:new Date,d:/hi/igm,e:/hello/}}},n=Hoek.clone(t);expect(t).to.deep.equal(n);expect(t.x.y.c.getTime()).to.equal(n.x.y.c.getTime());e()});it("should properly clone arrays",function(e){var t=[1,2,3],n=Hoek.clone(t);expect(t).to.deep.equal(n);e()});it("should perform actual copy for shallow keys (no pass by reference)",function(t){var n=Hoek.clone(e),r=Hoek.clone(e);expect(n.z).to.not.equal(e.z);expect(n.z).to.not.equal(r.z);expect(n.w).to.not.equal(e.w);expect(n.w).to.not.equal(r.w);expect(n.v).to.not.equal(e.v);expect(n.v).to.not.equal(r.v);n.y=5;expect(n.y).to.not.equal(e.y);expect(n.y).to.not.equal(r.y);t()});it("should perform actual copy for deep keys (no pass by reference)",function(t){var n=Hoek.clone(e),r=Hoek.clone(e);expect(n.x.c).to.not.equal(e.x.c);expect(n.x.c).to.not.equal(r.x.c);expect(n.x.c.getTime()).to.equal(e.x.c.getTime());expect(n.x.c.getTime()).to.equal(r.x.c.getTime());t()});it("copies functions with properties",function(e){var t={x:function(){return 1},y:{}};t.x.z="string in function";t.x.v=function(){return 2};t.y.u=t.x;var n=Hoek.clone(t);expect(n.x()).to.equal(1);expect(n.x.v()).to.equal(2);expect(n.y.u).to.equal(n.x);expect(n.x.z).to.equal("string in function");e()});it("should copy a buffer",function(e){var t={key:new Buffer([1,2,3,4,5]),cert:new Buffer([1,2,3,4,5,6,10])};copiedTls=Hoek.clone(t);expect(Buffer.isBuffer(copiedTls.key)).to.equal(!0);expect(JSON.stringify(copiedTls.key)).to.equal(JSON.stringify(t.key));expect(Buffer.isBuffer(copiedTls.cert)).to.equal(!0);expect(JSON.stringify(copiedTls.cert)).to.equal(JSON.stringify(t.cert));e()})});describe("#merge",function(){it("does not throw if source is null",function(e){var t={},n=null,r=null;expect(function(){r=Hoek.merge(t,n)}).to.not.throw();expect(r).to.equal(t);e()});it("does not throw if source is undefined",function(e){var t={},n=undefined,r=null;expect(function(){r=Hoek.merge(t,n)}).to.not.throw();expect(r).to.equal(t);e()});it("throws if source is not an object",function(e){expect(function(){var e={},t=0;Hoek.merge(e,t)}).to.throw("Invalid source value: must be null, undefined, or an object");e()});it("throws if target is not an object",function(e){expect(function(){var e=0,t={};Hoek.merge(e,t)}).to.throw("Invalid target value: must be an object");e()});it("throws if target is not an array and source is",function(e){expect(function(){var e={},t=[1,2];Hoek.merge(e,t)}).to.throw("Cannot merge array onto an object");e()});it("returns the same object when merging arrays",function(e){var t=[],n=[1,2];expect(Hoek.merge(t,n)).to.equal(t);e()});it("should combine an empty object with a non-empty object",function(t){var n={},r=e,i=Hoek.merge(n,r);expect(n).to.deep.equal(r);expect(i).to.deep.equal(r);t()});it("should override values in target",function(e){var t={x:1,y:2,z:3,v:5,t:"test",m:"abc"},n={x:null,z:4,v:0,t:{u:6},m:"123"},r=Hoek.merge(t,n);expect(r.x).to.equal(null);expect(r.y).to.equal(2);expect(r.z).to.equal(4);expect(r.v).to.equal(0);expect(r.m).to.equal("123");expect(r.t).to.deep.equal({u:6});e()});it("should override values in target (flip)",function(e){var t={x:1,y:2,z:3,v:5,t:"test",m:"abc"},n={x:null,z:4,v:0,t:{u:6},m:"123"},r=Hoek.merge(n,t);expect(r.x).to.equal(1);expect(r.y).to.equal(2);expect(r.z).to.equal(3);expect(r.v).to.equal(5);expect(r.m).to.equal("abc");expect(r.t).to.deep.equal("test");e()})});describe("#applyToDefaults",function(){var e={a:1,b:2,c:{d:3,e:[5,6]},f:6,g:"test"};it("should return null if options is false",function(t){var n=Hoek.applyToDefaults(e,!1);expect(n).to.equal(null);t()});it("should return a copy of defaults if options is true",function(t){var n=Hoek.applyToDefaults(e,!0);expect(n).to.deep.equal(n);t()});it("should apply object to defaults",function(t){var n={a:null,c:{e:[4]},f:0,g:{h:5}},r=Hoek.applyToDefaults(e,n);expect(r.c.e).to.deep.equal([4]);expect(r.a).to.equal(1);expect(r.b).to.equal(2);expect(r.f).to.equal(0);expect(r.g).to.deep.equal({h:5});t()})});describe("#unique",function(){it("should ensure uniqueness within array of objects based on subkey",function(e){var r=Hoek.unique(t,"x");expect(r).to.deep.equal(n);e()});it("removes duplicated without key",function(e){expect(Hoek.unique([1,2,3,4,2,1,5])).to.deep.equal([1,2,3,4,5]);e()})});describe("#mapToObject",function(){it("should return null on null array",function(e){var t=Hoek.mapToObject(null);expect(t).to.equal(null);e()});it("should convert basic array to existential object",function(e){var t=[1,2,3,4],n=Hoek.mapToObject(t);for(var r in t)expect(n[t[r]]).to.equal(!0);e()});it("should convert array of objects to existential object",function(e){var t=[{x:1},{x:2},{x:3}],n="x",r=Hoek.mapToObject(t,n);for(var i in t)expect(r[t[i][n]]).to.equal(!0);e()})});describe("#intersect",function(){it("should return the common objects of two arrays",function(e){var t=[1,2,3,4,4,5,5],n=[5,4,5,6,7],r=Hoek.intersect(t,n);expect(r.length).to.equal(2);e()});it("should return just the first common object of two arrays",function(e){var t=[1,2,3,4,4,5,5],n=[5,4,5,6,7],r=Hoek.intersect(t,n,!0);expect(r).to.equal(5);e()});it("should return an empty array if either input is null",function(e){expect(Hoek.intersect([1],null).length).to.equal(0);expect(Hoek.intersect(null,[1]).length).to.equal(0);e()});it("should return the common objects of object and array",function(e){var t=[1,2,3,4,4,5,5],n=[5,4,5,6,7],r=Hoek.intersect(Hoek.mapToObject(t),n);expect(r.length).to.equal(2);e()})});describe("#matchKeys",function(){it("should match the existing object keys",function(e){var t={a:1,b:2,c:3,d:null};expect(Hoek.matchKeys(t,["b","c","d","e"])).to.deep.equal(["b","c","d"]);e()})});describe("#flatten",function(){it("should return a flat array",function(e){var t=Hoek.flatten([1,2,[3,4,[5,6],[7],8],[9],[10,[11,12]],13]);expect(t.length).to.equal(13);expect(t).to.deep.equal([1,2,3,4,5,6,7,8,9,10,11,12,13]);e()})});describe("#removeKeys",function(){var e={location:{name:"San Bruno"},company:{name:"@WalmartLabs"}};it("should delete params with definition's hide set to true",function(t){var n=Hoek.removeKeys(e,["location"]);expect(e.location).to.not.exist;expect(e.company).to.exist;t()})});describe("#reach",function(){var e={a:{b:{c:{d:1,e:2},f:"hello"},g:{h:3}},i:function(){}};it("returns a valid member",function(t){expect(Hoek.reach(e,"a.b.c.d")).to.equal(1);t()});it("returns null on null object",function(e){expect(Hoek.reach(null,"a.b.c.d")).to.not.exist;e()});it("returns null on missing member",function(t){expect(Hoek.reach(e,"a.b.c.d.x")).to.not.exist;t()});it("returns null on invalid member",function(t){expect(Hoek.reach(e,"a.b.c.d-.x")).to.not.exist;t()});it("returns function member",function(t){expect(typeof Hoek.reach(e,"i")).to.equal("function");t()})});describe("#inheritAsync",function(){it("should inherit selected methods and wrap in async call",function(e){var t={a:function(){return"a!"},b:function(){return"b!"},c:function(){throw new Error("c!")}},n=function(){};n.prototype.c=function(){return"oops"};Hoek.inheritAsync(n,t,["a","c"]);var r=new n;expect(typeof r.a).to.equal("function");expect(typeof r.c).to.equal("function");expect(r.b).to.not.exist;r.a(function(t,n){expect(t).to.not.exist;expect(n).to.equal("a!");r.c(function(t,n){expect(n).to.not.exist;expect(t.message).to.equal("c!");e()})})})});describe("#callStack",function(){it("should return the full call stack",function(e){var t=Hoek.callStack();expect(t[0][0]).to.contain("index.js");expect(t[0][2]).to.equal(30);e()})});describe("#displayStack ",function(){it("should return the full call stack for display",function(e){var t=Hoek.displayStack();expect(t[0]).to.contain("test/index.js:");e()});it("should include constructor functions correctly",function(e){var t=function(e){e()},n=new t(function(){var t=Hoek.displayStack();expect(t[1]).to.contain("new Something");e()})})});describe("#abort",function(){it("should exit process when not in test mode",function(e){var t=process.env.NODE_ENV,n=process.stdout.write,r=process.exit;process.env.NODE_ENV="nottatest";process.stdout.write=function(){};process.exit=function(i){process.exit=r;process.env.NODE_ENV=t;process.stdout.write=n;expect(i).to.equal(1);e()};Hoek.abort("Boom")});it("should throw when not in test mode and abortThrow is true",function(e){var t=process.env.NODE_ENV;process.env.NODE_ENV="nottatest";Hoek.abortThrow=!0;var n=function(){Hoek.abort("my error message")};expect(n).to.throw("my error message");Hoek.abortThrow=!1;process.env.NODE_ENV=t;e()});it("should respect hideStack argument",function(e){var t=process.env.NODE_ENV,n=process.stdout.write,r=process.exit,i="";process.exit=function(){};process.env.NODE_ENV="";process.stdout.write=function(e){i=e};Hoek.abort("my error message",!0);process.env.NODE_ENV=t;process.stdout.write=n;process.exit=r;expect(i).to.equal("ABORT: my error message\n	\n");e()});it("should default to showing stack",function(e){var t=process.env.NODE_ENV,n=process.stdout.write,r=process.exit,i="";process.exit=function(){};process.env.NODE_ENV="";process.stdout.write=function(e){i=e};Hoek.abort("my error message");process.env.NODE_ENV=t;process.stdout.write=n;process.exit=r;expect(i).to.contain("index.js");e()})});describe("#assert",function(){it("should throw an Error when using assert in a test",function(e){var t=function(){Hoek.assert(!1,"my error message")};expect(t).to.throw("my error message");e()});it("should throw an Error when using assert in a test with no message",function(e){var t=function(){Hoek.assert(!1)};expect(t).to.throw("Unknown error");e()});it("should throw an Error when using assert in a test with multipart message",function(e){var t=function(){Hoek.assert(!1,"This","is","my message")};expect(t).to.throw("This is my message");e()});it("should throw an Error when using assert in a test with object message",function(e){var t=function(){Hoek.assert(!1,"This","is",{spinal:"tap"})};expect(t).to.throw('This is {"spinal":"tap"}');e()});it("should throw an Error when using assert in a test with error object message",function(e){var t=function(){Hoek.assert(!1,new Error("This is spinal tap"))};expect(t).to.throw("This is spinal tap");e()})});describe("#loadDirModules",function(){it("should load modules from directory",function(e){var t={};Hoek.loadDirModules(__dirname+"/modules",["test2"],t);expect(t.Test1.x).to.equal(1);expect(t.Test2).to.not.exist;expect(t.Test3.z).to.equal(3);e()});it("should list modules from directory into function",function(e){var t={};Hoek.loadDirModules(__dirname+"/modules",["test2"],function(e,n,r){t[n]=r});expect(t.test1).to.equal("Test1");expect(t.test2).to.not.exist;expect(t.test3).to.equal("Test3");e()})});describe("#rename",function(){it("should rename object key",function(e){var t={b:"c"};Hoek.rename(t,"b","x");expect(t.b).to.not.exist;expect(t.x).to.equal("c");e()})});describe("Timer",function(){it("should return time elapsed",function(e){var t=new Hoek.Timer;setTimeout(function(){expect(t.elapsed()).to.be.above(9);e()},12)})});describe("#loadPackage",function(){it("should",function(e){var t=Hoek.loadPackage();expect(t.name).to.equal("hoek");e()})});describe("#escapeRegex",function(){it("should escape all special regular expression characters",function(e){var t=Hoek.escapeRegex('4^f$s.4*5+-_?%=#!:@|~\\/`"(>)[<]d{}s,');expect(t).to.equal('4\\^f\\$s\\.4\\*5\\+\\-_\\?%\\=#\\!\\:@\\|~\\\\\\/`"\\(>\\)\\[<\\]d\\{\\}s\\,');e()})});describe("#toss",function(){it("should call callback with new error",function(e){var t=function(t){expect(t).to.exist;expect(t.message).to.equal("bug");e()};Hoek.toss(!0,"feature",t);Hoek.toss(!1,"bug",t)});it("should call callback with new error and no message",function(e){Hoek.toss(!1,function(t){expect(t).to.exist;expect(t.message).to.equal("");e()})});it("should call callback with error condition",function(e){Hoek.toss(new Error("boom"),function(t){expect(t).to.exist;expect(t.message).to.equal("boom");e()})});it("should call callback with new error using message with error condition",function(e){Hoek.toss(new Error("ka"),"boom",function(t){expect(t).to.exist;expect(t.message).to.equal("boom");e()})});it("should call callback with new error using passed error with error condition",function(e){Hoek.toss(new Error("ka"),new Error("boom"),function(t){expect(t).to.exist;expect(t.message).to.equal("boom");e()})})});describe("Base64Url",function(){var e="AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0-P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn-AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq-wsbKztLW2t7i5uru8vb6_wMHCw8TFxsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t_g4eLj5OXm5-jp6uvs7e7v8PHy8_T19vf4-fr7_P3-_w",t=unescape("%00%01%02%03%04%05%06%07%08%09%0A%0B%0C%0D%0E%0F%10%11%12%13%14%15%16%17%18%19%1A%1B%1C%1D%1E%1F%20%21%22%23%24%25%26%27%28%29*+%2C-./0123456789%3A%3B%3C%3D%3E%3F@ABCDEFGHIJKLMNOPQRSTUVWXYZ%5B%5C%5D%5E_%60abcdefghijklmnopqrstuvwxyz%7B%7C%7D%7E%7F%80%81%82%83%84%85%86%87%88%89%8A%8B%8C%8D%8E%8F%90%91%92%93%94%95%96%97%98%99%9A%9B%9C%9D%9E%9F%A0%A1%A2%A3%A4%A5%A6%A7%A8%A9%AA%AB%AC%AD%AE%AF%B0%B1%B2%B3%B4%B5%B6%B7%B8%B9%BA%BB%BC%BD%BE%BF%C0%C1%C2%C3%C4%C5%C6%C7%C8%C9%CA%CB%CC%CD%CE%CF%D0%D1%D2%D3%D4%D5%D6%D7%D8%D9%DA%DB%DC%DD%DE%DF%E0%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%EF%F0%F1%F2%F3%F4%F5%F6%F7%F8%F9%FA%FB%FC%FD%FE%FF");describe("#base64urlEncode",function(){it("should base64 URL-safe a string",function(n){expect(Hoek.base64urlEncode(t)).to.equal(e);n()})});describe("#base64urlDecode",function(){it("should un-base64 URL-safe a string",function(n){expect(Hoek.base64urlDecode(e)).to.equal(t);n()});it("should return error on undefined input",function(e){expect(Hoek.base64urlDecode().message).to.exist;e()});it("should return error on invalid input",function(e){expect(Hoek.base64urlDecode("*").message).to.exist;e()})})});describe("#escapeHeaderAttribute",function(){it("should not alter ascii values",function(e){var t=Hoek.escapeHeaderAttribute("My Value");expect(t).to.equal("My Value");e()});it("should escape all special HTTP header attribute characters",function(e){var t=Hoek.escapeHeaderAttribute('I said go!!!#"'+String.fromCharCode(92));expect(t).to.equal('I said go!!!#\\"\\\\');e()});it("should throw on large unicode characters",function(e){var t=function(){Hoek.escapeHeaderAttribute("this is a test"+String.fromCharCode(500)+String.fromCharCode(300))};expect(t).to.throw(Error);e()});it("should throw on CRLF to prevent response splitting",function(e){var t=function(){Hoek.escapeHeaderAttribute("this is a test\r\n")};expect(t).to.throw(Error);e()})});describe("#escapeHtml",function(){it("should escape all special HTML characters",function(e){var t=Hoek.escapeHtml("&<>\"'`");expect(t).to.equal("&amp;&lt;&gt;&quot;&#x27;&#x60;");e()});it("should return empty string on falsy input",function(e){var t=Hoek.escapeHtml("");expect(t).to.equal("");e()});it("should return unchanged string on no reserved input",function(e){var t=Hoek.escapeHtml("abc");expect(t).to.equal("abc");e()})});describe("#printEvent",function(){it("outputs event as string",function(e){var t={timestamp:(new Date(2013,1,1,6,30,45,123)).getTime(),tags:["a","b","c"],data:{some:"data"}};Hoek.consoleFunc=function(t){Hoek.consoleFunc=console.log;expect(t).to.equal('130201/063045.123, a, {"some":"data"}');e()};Hoek.printEvent(t)});it("outputs JSON error",function(e){var t={timestamp:(new Date(2013,1,1,6,30,45,123)).getTime(),tags:["a","b","c"],data:{some:"data"}};t.data.a=t.data;Hoek.consoleFunc=function(t){Hoek.consoleFunc=console.log;expect(t).to.equal("130201/063045.123, a, JSON Error: Converting circular structure to JSON");e()};Hoek.printEvent(t)})});describe("#nextTick",function(){it("calls the provided callback on nextTick",function(e){var t=0,n=function(e,n){t+=e;n()},r=Hoek.nextTick(n);r(5,function(){expect(t).to.equal(6);e()});expect(t).to.equal(0);n(1,function(){expect(t).to.equal(1)})})})});