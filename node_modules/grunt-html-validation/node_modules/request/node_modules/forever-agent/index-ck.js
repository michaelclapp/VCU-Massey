function ForeverAgent(e){var t=this;t.options=e||{};t.requests={};t.sockets={};t.freeSockets={};t.maxSockets=t.options.maxSockets||Agent.defaultMaxSockets;t.minSockets=t.options.minSockets||ForeverAgent.defaultMinSockets;t.on("free",function(e,n,r){var i=n+":"+r;if(t.requests[i]&&t.requests[i].length)t.requests[i].shift().onSocket(e);else if(t.sockets[i].length<t.minSockets){t.freeSockets[i]||(t.freeSockets[i]=[]);t.freeSockets[i].push(e);function s(){e.destroy()}e._onIdleError=s;e.on("error",s)}else e.destroy()})}function ForeverAgentSSL(e){ForeverAgent.call(this,e)}function createConnectionSSL(e,t,n){typeof e=="object"?n=e:typeof t=="object"?n=t:typeof n=="object"?n=n:n={};typeof e=="number"&&(n.port=e);typeof t=="string"&&(n.host=t);return tls.connect(n)}module.exports=ForeverAgent;ForeverAgent.SSL=ForeverAgentSSL;var util=require("util"),Agent=require("http").Agent,net=require("net"),tls=require("tls"),AgentSSL=require("https").Agent;util.inherits(ForeverAgent,Agent);ForeverAgent.defaultMinSockets=5;ForeverAgent.prototype.createConnection=net.createConnection;ForeverAgent.prototype.addRequestNoreuse=Agent.prototype.addRequest;ForeverAgent.prototype.addRequest=function(e,t,n){var r=t+":"+n;if(this.freeSockets[r]&&this.freeSockets[r].length>0&&!e.useChunkedEncodingByDefault){var i=this.freeSockets[r].pop();i.removeListener("error",i._onIdleError);delete i._onIdleError;e._reusedSocket=!0;e.onSocket(i)}else this.addRequestNoreuse(e,t,n)};ForeverAgent.prototype.removeSocket=function(e,t,n,r){if(this.sockets[t]){var i=this.sockets[t].indexOf(e);i!==-1&&this.sockets[t].splice(i,1)}else if(this.sockets[t]&&this.sockets[t].length===0){delete this.sockets[t];delete this.requests[t]}if(this.freeSockets[t]){var i=this.freeSockets[t].indexOf(e);if(i!==-1){this.freeSockets[t].splice(i,1);this.freeSockets[t].length===0&&delete this.freeSockets[t]}}this.requests[t]&&this.requests[t].length&&this.createSocket(t,n,r).emit("free")};util.inherits(ForeverAgentSSL,ForeverAgent);ForeverAgentSSL.prototype.createConnection=createConnectionSSL;ForeverAgentSSL.prototype.addRequestNoreuse=AgentSSL.prototype.addRequest;