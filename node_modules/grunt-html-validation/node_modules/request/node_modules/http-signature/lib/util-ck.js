// Copyright 2012 Joyent, Inc.  All rights reserved.
function readNext(e,t){var n=ctype.ruint32(e,"big",t);t+=4;var r=t+n;return{data:e.slice(t,r),offset:r}}function writeInt(e,t){e.writeByte(2);e.writeLength(t.length);for(var n=0;n<t.length;n++)e.writeByte(t[n]);return e}function rsaToPEM(e){var t,n,r,i,s,o="",u=0,a,f;try{t=new Buffer(e.split(" ")[1],"base64");f=readNext(t,u);a=f.data.toString();u=f.offset;if(a!=="ssh-rsa")throw new Error("Invalid ssh key type: "+a);f=readNext(t,u);r=f.data;u=f.offset;f=readNext(t,u);s=f.data}catch(l){throw new Error("Invalid ssh key: "+e)}n=new asn1.BerWriter;n.startSequence();n.startSequence();n.writeOID("1.2.840.113549.1.1.1");n.writeNull();n.endSequence();n.startSequence(3);n.writeByte(0);n.startSequence();writeInt(n,s);writeInt(n,r);n.endSequence();n.endSequence();n.endSequence();f=n.buffer.toString("base64");for(i=0;i<f.length;i++){i%64===0&&(o+="\n");o+=f.charAt(i)}/\\n$/.test(o)||(o+="\n");return"-----BEGIN PUBLIC KEY-----"+o+"-----END PUBLIC KEY-----\n"}function dsaToPEM(e){var t,n=0,r,i,s="",o,u,a,f,l;try{t=new Buffer(e.split(" ")[1],"base64");r=readNext(t,n);o=r.data.toString();n=r.offset;if(!/^ssh-ds[as].*/.test(o))throw new Error("Invalid ssh key type: "+o);r=readNext(t,n);u=r.data;n=r.offset;r=readNext(t,n);a=r.data;n=r.offset;r=readNext(t,n);f=r.data;n=r.offset;r=readNext(t,n);l=r.data}catch(c){console.log(c.stack);throw new Error("Invalid ssh key: "+e)}i=new asn1.BerWriter;i.startSequence();i.startSequence();i.writeOID("1.2.840.10040.4.1");i.startSequence();writeInt(i,u);writeInt(i,a);writeInt(i,f);i.endSequence();i.endSequence();i.startSequence(3);i.writeByte(0);writeInt(i,l);i.endSequence();i.endSequence();r=i.buffer.toString("base64");for(var h=0;h<r.length;h++){h%64===0&&(s+="\n");s+=r.charAt(h)}/\\n$/.test(s)||(s+="\n");return"-----BEGIN PUBLIC KEY-----"+s+"-----END PUBLIC KEY-----\n"}var assert=require("assert-plus"),crypto=require("crypto"),asn1=require("asn1"),ctype=require("ctype");module.exports={sshKeyToPEM:function(t){assert.string(t,"ssh_key");if(/^ssh-rsa.*/.test(t))return rsaToPEM(t);if(/^ssh-ds[as].*/.test(t))return dsaToPEM(t);throw new Error("Only RSA and DSA public keys are allowed")},fingerprint:function(t){assert.string(t,"ssh_key");var n=t.split(" ");if(!n||!n.length||n.length<2)throw new Error("invalid ssh key");var r=new Buffer(n[1],"base64"),i=crypto.createHash("md5");i.update(r);var s=i.digest("hex"),o="";for(var u=0;u<s.length;u++){u&&u%2===0&&(o+=":");o+=s[u]}return o}};