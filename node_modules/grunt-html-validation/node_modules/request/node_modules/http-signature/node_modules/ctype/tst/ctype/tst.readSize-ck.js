/*
 * Testing to ensure we're reading the expected number bytes
 */function testUint8(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("80","hex");t=e.readStruct([{item:{type:"uint8_t"}}],n,0);ASSERT.equal(t.size,1)}function testSint8(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("80","hex");t=e.readStruct([{item:{type:"int8_t"}}],n,0);ASSERT.equal(t.size,1)}function testUint16(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("8000","hex");t=e.readStruct([{item:{type:"uint16_t"}}],n,0);ASSERT.equal(t.size,2)}function testSint16(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("8000","hex");t=e.readStruct([{item:{type:"int16_t"}}],n,0);ASSERT.equal(t.size,2)}function testUint32(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("80000000","hex");t=e.readStruct([{item:{type:"uint32_t"}}],n,0);ASSERT.equal(t.size,4)}function testSint32(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("80000000","hex");t=e.readStruct([{item:{type:"int32_t"}}],n,0);ASSERT.equal(t.size,4)}function testUint64(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("8000000000000000","hex");t=e.readStruct([{item:{type:"uint64_t"}}],n,0);ASSERT.equal(t.size,8)}function testSint64(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("8000000000000000","hex");t=e.readStruct([{item:{type:"int64_t"}}],n,0);ASSERT.equal(t.size,8)}function testFloat(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("ABAAAA3E","hex");t=e.readStruct([{item:{type:"float"}}],n,0);ASSERT.equal(t.size,4)}function testDouble(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("000000000000F03F","hex");t=e.readStruct([{item:{type:"double"}}],n,0);ASSERT.equal(t.size,8)}function testChar(){var e,t,n;e=new mod_ctype.Parser({endian:"little"});n=new Buffer("t");t=e.readStruct([{item:{type:"char"}}],n,0);ASSERT.equal(t.size,1)}function test(){testSint8();testUint8();testSint16();testUint16();testSint32();testUint32();testSint64();testUint64();testFloat();testDouble();testChar()}var mod_ctype=require("../../ctype"),ASSERT=require("assert");test();