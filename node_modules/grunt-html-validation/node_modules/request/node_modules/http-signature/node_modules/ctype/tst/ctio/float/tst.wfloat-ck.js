/*
 * Another place to find bugs that may yet plague us. This time with writing out
 * floats to arrays. We are lazy and did basically just take the opposite of our
 * test code to read in values.
 */function testfloat(){var e=new Buffer(4);mod_ctype.wfloat(0,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);mod_ctype.wfloat(0,"little",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);mod_ctype.wfloat(Number.POSITIVE_INFINITY,"big",e,0);ASSERT.equal(127,e[0]);ASSERT.equal(128,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);mod_ctype.wfloat(Number.POSITIVE_INFINITY,"little",e,0);ASSERT.equal(127,e[3]);ASSERT.equal(128,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wfloat(Number.NEGATIVE_INFINITY,"big",e,0);ASSERT.equal(255,e[0]);ASSERT.equal(128,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);mod_ctype.wfloat(Number.NEGATIVE_INFINITY,"little",e,0);ASSERT.equal(255,e[3]);ASSERT.equal(128,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wfloat(NaN,"big",e,0);ASSERT.equal(127,e[0]);ASSERT.equal(128,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(23,e[3]);mod_ctype.wfloat(NaN,"little",e,0);ASSERT.equal(127,e[3]);ASSERT.equal(128,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(23,e[0]);mod_ctype.wfloat(1.125,"big",e,0);ASSERT.equal(63,e[0]);ASSERT.equal(144,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);mod_ctype.wfloat(1.125,"little",e,0);ASSERT.equal(63,e[3]);ASSERT.equal(144,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wfloat(1.0000001192092896,"big",e,0);ASSERT.equal(63,e[0]);ASSERT.equal(128,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(1,e[3]);mod_ctype.wfloat(1.0000001192092896,"little",e,0);ASSERT.equal(63,e[3]);ASSERT.equal(128,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(1,e[0]);mod_ctype.wfloat(1.0000001192092896,"big",e,0);ASSERT.equal(63,e[0]);ASSERT.equal(128,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(1,e[3]);mod_ctype.wfloat(1.0000001192092896,"little",e,0);ASSERT.equal(63,e[3]);ASSERT.equal(128,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(1,e[0]);mod_ctype.wfloat(2.3283067140944524e-10,"big",e,0);ASSERT.equal(47,e[0]);ASSERT.equal(128,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(1,e[3]);mod_ctype.wfloat(2.3283067140944524e-10,"little",e,0);ASSERT.equal(47,e[3]);ASSERT.equal(128,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(1,e[0]);mod_ctype.wfloat(-2.4010576103645774e38,"big",e,0);ASSERT.equal(255,e[0]);ASSERT.equal(52,e[1]);ASSERT.equal(162,e[2]);ASSERT.equal(176,e[3]);mod_ctype.wfloat(-2.4010576103645774e38,"little",e,0);ASSERT.equal(255,e[3]);ASSERT.equal(52,e[2]);ASSERT.equal(162,e[1]);ASSERT.equal(176,e[0]);mod_ctype.wfloat(3.6468792534053364e-40,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(3,e[1]);ASSERT.equal(248,e[2]);ASSERT.equal(154,e[3]);mod_ctype.wfloat(3.6468792534053364e-40,"little",e,0);ASSERT.equal(0,e[3]);ASSERT.equal(3,e[2]);ASSERT.equal(248,e[1]);ASSERT.equal(154,e[0]);mod_ctype.wfloat(-3.6468792534053364e-40,"big",e,0);ASSERT.equal(128,e[0]);ASSERT.equal(3,e[1]);ASSERT.equal(248,e[2]);ASSERT.equal(154,e[3]);mod_ctype.wfloat(-3.6468792534053364e-40,"little",e,0);ASSERT.equal(128,e[3]);ASSERT.equal(3,e[2]);ASSERT.equal(248,e[1]);ASSERT.equal(154,e[0]);mod_ctype.wfloat(3.4028234663852886e38,"big",e,0);ASSERT.equal(127,e[0]);ASSERT.equal(127,e[1]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[3]);mod_ctype.wfloat(3.4028234663852886e38,"little",e,0);ASSERT.equal(127,e[3]);ASSERT.equal(127,e[2]);ASSERT.equal(255,e[1]);ASSERT.equal(255,e[0]);mod_ctype.wfloat(-3.4028234663852886e38,"big",e,0);ASSERT.equal(255,e[0]);ASSERT.equal(127,e[1]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[3]);mod_ctype.wfloat(-3.4028234663852886e38,"little",e,0);ASSERT.equal(255,e[3]);ASSERT.equal(127,e[2]);ASSERT.equal(255,e[1]);ASSERT.equal(255,e[0]);mod_ctype.wfloat(1.1754943508222875e-38,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(128,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);mod_ctype.wfloat(1.1754943508222875e-38,"little",e,0);ASSERT.equal(0,e[3]);ASSERT.equal(128,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wfloat(-1.1754943508222875e-38,"big",e,0);ASSERT.equal(128,e[0]);ASSERT.equal(128,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);mod_ctype.wfloat(-1.1754943508222875e-38,"little",e,0);ASSERT.equal(128,e[3]);ASSERT.equal(128,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wfloat(1.401298464324817e-45,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(1,e[3]);mod_ctype.wfloat(1.401298464324817e-45,"little",e,0);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(1,e[0]);mod_ctype.wfloat(-1.401298464324817e-45,"big",e,0);ASSERT.equal(128,e[0]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(1,e[3]);mod_ctype.wfloat(-1.401298464324817e-45,"little",e,0);ASSERT.equal(128,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(1,e[0]);mod_ctype.wfloat(1.1754942106924411e-38,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(127,e[1]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[3]);mod_ctype.wfloat(1.1754942106924411e-38,"little",e,0);ASSERT.equal(0,e[3]);ASSERT.equal(127,e[2]);ASSERT.equal(255,e[1]);ASSERT.equal(255,e[0]);mod_ctype.wfloat(-1.1754942106924411e-38,"big",e,0);ASSERT.equal(128,e[0]);ASSERT.equal(127,e[1]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[3]);mod_ctype.wfloat(-1.1754942106924411e-38,"little",e,0);ASSERT.equal(128,e[3]);ASSERT.equal(127,e[2]);ASSERT.equal(255,e[1]);ASSERT.equal(255,e[0]);e=new Buffer(6);mod_ctype.wfloat(-1.2027516403607578e-32,"big",e,2);ASSERT.equal(138,e[2]);ASSERT.equal(121,e[3]);ASSERT.equal(205,e[4]);ASSERT.equal(63,e[5]);mod_ctype.wfloat(-1.2027516403607578e-32,"little",e,2);ASSERT.equal(138,e[5]);ASSERT.equal(121,e[4]);ASSERT.equal(205,e[3]);ASSERT.equal(63,e[2])}function testdouble(){var e=new Buffer(10);mod_ctype.wdouble(0,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[7]);mod_ctype.wdouble(0,"little",e,0);ASSERT.equal(0,e[7]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wdouble(NaN,"big",e,0);ASSERT.equal(127,e[0]);ASSERT.equal(240,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(23,e[7]);mod_ctype.wdouble(NaN,"little",e,0);ASSERT.equal(127,e[7]);ASSERT.equal(240,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(23,e[0]);mod_ctype.wdouble(Number.POSITIVE_INFINITY,"big",e,0);ASSERT.equal(127,e[0]);ASSERT.equal(240,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[7]);mod_ctype.wdouble(Number.POSITIVE_INFINITY,"little",e,0);ASSERT.equal(127,e[7]);ASSERT.equal(240,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wdouble(Number.NEGATIVE_INFINITY,"big",e,0);ASSERT.equal(255,e[0]);ASSERT.equal(240,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[7]);mod_ctype.wdouble(Number.NEGATIVE_INFINITY,"little",e,0);ASSERT.equal(255,e[7]);ASSERT.equal(240,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wdouble(1.125,"big",e,0);ASSERT.equal(63,e[0]);ASSERT.equal(242,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[7]);mod_ctype.wdouble(1.125,"little",e,0);ASSERT.equal(63,e[7]);ASSERT.equal(242,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wdouble(-1.125,"big",e,0);ASSERT.equal(191,e[0]);ASSERT.equal(242,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[7]);mod_ctype.wdouble(-1.125,"little",e,0);ASSERT.equal(191,e[7]);ASSERT.equal(242,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wdouble(1.4397318913736026e283,"big",e,0);ASSERT.equal(122,e[0]);ASSERT.equal(184,e[1]);ASSERT.equal(201,e[2]);ASSERT.equal(52,e[3]);ASSERT.equal(114,e[4]);ASSERT.equal(22,e[5]);ASSERT.equal(249,e[6]);ASSERT.equal(14,e[7]);mod_ctype.wdouble(1.4397318913736026e283,"little",e,0);ASSERT.equal(122,e[7]);ASSERT.equal(184,e[6]);ASSERT.equal(201,e[5]);ASSERT.equal(52,e[4]);ASSERT.equal(114,e[3]);ASSERT.equal(22,e[2]);ASSERT.equal(249,e[1]);ASSERT.equal(14,e[0]);mod_ctype.wdouble(-1.4397318913736026e283,"big",e,0);ASSERT.equal(250,e[0]);ASSERT.equal(184,e[1]);ASSERT.equal(201,e[2]);ASSERT.equal(52,e[3]);ASSERT.equal(114,e[4]);ASSERT.equal(22,e[5]);ASSERT.equal(249,e[6]);ASSERT.equal(14,e[7]);mod_ctype.wdouble(-1.4397318913736026e283,"little",e,0);ASSERT.equal(250,e[7]);ASSERT.equal(184,e[6]);ASSERT.equal(201,e[5]);ASSERT.equal(52,e[4]);ASSERT.equal(114,e[3]);ASSERT.equal(22,e[2]);ASSERT.equal(249,e[1]);ASSERT.equal(14,e[0]);mod_ctype.wdouble(8.82521232268344e-309,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(6,e[1]);ASSERT.equal(88,e[2]);ASSERT.equal(148,e[3]);ASSERT.equal(19,e[4]);ASSERT.equal(39,e[5]);ASSERT.equal(138,e[6]);ASSERT.equal(205,e[7]);mod_ctype.wdouble(8.82521232268344e-309,"little",e,0);ASSERT.equal(0,e[7]);ASSERT.equal(6,e[6]);ASSERT.equal(88,e[5]);ASSERT.equal(148,e[4]);ASSERT.equal(19,e[3]);ASSERT.equal(39,e[2]);ASSERT.equal(138,e[1]);ASSERT.equal(205,e[0]);mod_ctype.wdouble(-8.82521232268344e-309,"big",e,0);ASSERT.equal(128,e[0]);ASSERT.equal(6,e[1]);ASSERT.equal(88,e[2]);ASSERT.equal(148,e[3]);ASSERT.equal(19,e[4]);ASSERT.equal(39,e[5]);ASSERT.equal(138,e[6]);ASSERT.equal(205,e[7]);mod_ctype.wdouble(-8.82521232268344e-309,"little",e,0);ASSERT.equal(128,e[7]);ASSERT.equal(6,e[6]);ASSERT.equal(88,e[5]);ASSERT.equal(148,e[4]);ASSERT.equal(19,e[3]);ASSERT.equal(39,e[2]);ASSERT.equal(138,e[1]);ASSERT.equal(205,e[0]);mod_ctype.wdouble(5e-324,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(1,e[7]);mod_ctype.wdouble(5e-324,"little",e,0);ASSERT.equal(0,e[7]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(1,e[0]);mod_ctype.wdouble(-5e-324,"big",e,0);ASSERT.equal(128,e[0]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(1,e[7]);mod_ctype.wdouble(-5e-324,"little",e,0);ASSERT.equal(128,e[7]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(1,e[0]);mod_ctype.wdouble(2.225073858507201e-308,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(15,e[1]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[3]);ASSERT.equal(255,e[4]);ASSERT.equal(255,e[5]);ASSERT.equal(255,e[6]);ASSERT.equal(255,e[7]);mod_ctype.wdouble(2.225073858507201e-308,"little",e,0);ASSERT.equal(0,e[7]);ASSERT.equal(15,e[6]);ASSERT.equal(255,e[5]);ASSERT.equal(255,e[4]);ASSERT.equal(255,e[3]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[1]);ASSERT.equal(255,e[0]);mod_ctype.wdouble(-2.225073858507201e-308,"big",e,0);ASSERT.equal(128,e[0]);ASSERT.equal(15,e[1]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[3]);ASSERT.equal(255,e[4]);ASSERT.equal(255,e[5]);ASSERT.equal(255,e[6]);ASSERT.equal(255,e[7]);mod_ctype.wdouble(-2.225073858507201e-308,"little",e,0);ASSERT.equal(128,e[7]);ASSERT.equal(15,e[6]);ASSERT.equal(255,e[5]);ASSERT.equal(255,e[4]);ASSERT.equal(255,e[3]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[1]);ASSERT.equal(255,e[0]);mod_ctype.wdouble(2.2250738585072014e-308,"big",e,0);ASSERT.equal(0,e[0]);ASSERT.equal(16,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[7]);mod_ctype.wdouble(2.2250738585072014e-308,"little",e,0);ASSERT.equal(0,e[7]);ASSERT.equal(16,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wdouble(-2.2250738585072014e-308,"big",e,0);ASSERT.equal(128,e[0]);ASSERT.equal(16,e[1]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[6]);ASSERT.equal(0,e[7]);mod_ctype.wdouble(-2.2250738585072014e-308,"little",e,0);ASSERT.equal(128,e[7]);ASSERT.equal(16,e[6]);ASSERT.equal(0,e[5]);ASSERT.equal(0,e[4]);ASSERT.equal(0,e[3]);ASSERT.equal(0,e[2]);ASSERT.equal(0,e[1]);ASSERT.equal(0,e[0]);mod_ctype.wdouble(1.7976931348623157e308,"big",e,0);ASSERT.equal(127,e[0]);ASSERT.equal(239,e[1]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[3]);ASSERT.equal(255,e[4]);ASSERT.equal(255,e[5]);ASSERT.equal(255,e[6]);ASSERT.equal(255,e[7]);mod_ctype.wdouble(1.7976931348623157e308,"little",e,0);ASSERT.equal(127,e[7]);ASSERT.equal(239,e[6]);ASSERT.equal(255,e[5]);ASSERT.equal(255,e[4]);ASSERT.equal(255,e[3]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[1]);ASSERT.equal(255,e[0]);mod_ctype.wdouble(-1.7976931348623157e308,"big",e,0);ASSERT.equal(255,e[0]);ASSERT.equal(239,e[1]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[3]);ASSERT.equal(255,e[4]);ASSERT.equal(255,e[5]);ASSERT.equal(255,e[6]);ASSERT.equal(255,e[7]);mod_ctype.wdouble(-1.7976931348623157e308,"little",e,0);ASSERT.equal(255,e[7]);ASSERT.equal(239,e[6]);ASSERT.equal(255,e[5]);ASSERT.equal(255,e[4]);ASSERT.equal(255,e[3]);ASSERT.equal(255,e[2]);ASSERT.equal(255,e[1]);ASSERT.equal(255,e[0]);e[0]=222;e[1]=173;e[2]=190;e[3]=239;e[4]=186;e[5]=221;e[6]=202;e[7]=254;e[8]=22;e[9]=121;mod_ctype.wdouble(-0.000015130017658081283,"big",e,2);ASSERT.equal(190,e[2]);ASSERT.equal(239,e[3]);ASSERT.equal(186,e[4]);ASSERT.equal(221,e[5]);ASSERT.equal(202,e[6]);ASSERT.equal(254,e[7]);ASSERT.equal(22,e[8]);ASSERT.equal(121,e[9]);mod_ctype.wdouble(-0.000015130017658081283,"little",e,2);ASSERT.equal(190,e[9]);ASSERT.equal(239,e[8]);ASSERT.equal(186,e[7]);ASSERT.equal(221,e[6]);ASSERT.equal(202,e[5]);ASSERT.equal(254,e[4]);ASSERT.equal(22,e[3]);ASSERT.equal(121,e[2])}var mod_ctype=require("../../../ctio.js"),ASSERT=require("assert");testfloat();testdouble();