// Copyright (c) 2012, Mark Cavage. All rights reserved.
function capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}function uncapitalize(e){return e.charAt(0).toLowerCase()+e.slice(1)}function _(){return util.format.apply(util,arguments)}function _assert(e,t,n,r){if(!NDEBUG){n=n||t;r=r||_assert.caller;var i=typeof e;if(i!==t)throw new assert.AssertionError({message:_(TYPE_REQUIRED,n,t),actual:i,expected:t,operator:"===",stackStartFunction:r})}}function array(e,t,n){if(!NDEBUG){n=n||t;if(!Array.isArray(e))throw new assert.AssertionError({message:_(ARRAY_TYPE_REQUIRED,n,t),actual:typeof e,expected:"array",operator:"Array.isArray",stackStartFunction:array.caller});for(var r=0;r<e.length;r++)_assert(e[r],t,n,array)}}function bool(e,t){_assert(e,"boolean",t,bool)}function buffer(e,t){if(!Buffer.isBuffer(e))throw new assert.AssertionError({message:_(TYPE_REQUIRED,t,type),actual:typeof e,expected:"buffer",operator:"Buffer.isBuffer",stackStartFunction:buffer})}function func(e,t){_assert(e,"function",t)}function number(e,t){_assert(e,"number",t)}function object(e,t){_assert(e,"object",t)}function stream(e,t){if(!(e instanceof Stream))throw new assert.AssertionError({message:_(TYPE_REQUIRED,t,type),actual:typeof e,expected:"Stream",operator:"instanceof",stackStartFunction:buffer})}function string(e,t){_assert(e,"string",t)}var assert=require("assert"),Stream=require("stream").Stream,util=require("util"),NDEBUG=process.env.NODE_NDEBUG||!1,ARRAY_TYPE_REQUIRED="%s ([%s]) required",TYPE_REQUIRED="%s (%s) is required";module.exports={bool:bool,buffer:buffer,func:func,number:number,object:object,stream:stream,string:string};Object.keys(module.exports).forEach(function(e){if(e==="buffer")return;var t="arrayOf"+capitalize(e);e==="bool"&&(e="boolean");e==="func"&&(e="function");module.exports[t]=function(t,n){array(t,e,n)}});Object.keys(module.exports).forEach(function(e){var t="optional"+capitalize(e),n=uncapitalize(e.replace("arrayOf",""));n==="bool"&&(n="boolean");n==="func"&&(n="function");e.indexOf("arrayOf")!==-1?module.exports[t]=function(e,t){!NDEBUG&&e!==undefined&&array(e,n,t)}:module.exports[t]=function(e,t){!NDEBUG&&e!==undefined&&_assert(e,n,t)}});Object.keys(assert).forEach(function(e){if(e==="AssertionError"){module.exports[e]=assert[e];return}module.exports[e]=function(){NDEBUG||assert[e].apply(assert[e],arguments)}});