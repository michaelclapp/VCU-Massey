"use strict";function httpOverHttp(e){var t=new TunnelingAgent(e);t.request=http.request;return t}function httpsOverHttp(e){var t=new TunnelingAgent(e);t.request=http.request;t.createSocket=createSecureSocket;return t}function httpOverHttps(e){var t=new TunnelingAgent(e);t.request=https.request;return t}function httpsOverHttps(e){var t=new TunnelingAgent(e);t.request=https.request;t.createSocket=createSecureSocket;return t}function TunnelingAgent(e){var t=this;t.options=e||{};t.proxyOptions=t.options.proxy||{};t.maxSockets=t.options.maxSockets||http.Agent.defaultMaxSockets;t.requests=[];t.sockets=[];t.on("free",function(n,r,i){for(var s=0,o=t.requests.length;s<o;++s){var u=t.requests[s];if(u.host===r&&u.port===i){t.requests.splice(s,1);u.request.onSocket(n);return}}n.destroy();t.removeSocket(n)})}function createSecureSocket(e,t){var n=this;TunnelingAgent.prototype.createSocket.call(n,e,function(r){var i=tls.connect(0,mergeOptions({},n.options,{servername:e.host,socket:r}));t(i)})}function mergeOptions(e){for(var t=1,n=arguments.length;t<n;++t){var r=arguments[t];if(typeof r=="object"){var i=Object.keys(r);for(var s=0,o=i.length;s<o;++s){var u=i[s];r[u]!==undefined&&(e[u]=r[u])}}}return e}var net=require("net"),tls=require("tls"),http=require("http"),https=require("https"),events=require("events"),assert=require("assert"),util=require("util");exports.httpOverHttp=httpOverHttp;exports.httpsOverHttp=httpsOverHttp;exports.httpOverHttps=httpOverHttps;exports.httpsOverHttps=httpsOverHttps;util.inherits(TunnelingAgent,events.EventEmitter);TunnelingAgent.prototype.addRequest=function(t,n,r){var i=this;if(i.sockets.length>=this.maxSockets){i.requests.push({host:n,port:r,request:t});return}i.createSocket({host:n,port:r,request:t},function(e){function s(){i.emit("free",e,n,r)}function o(t){i.removeSocket();e.removeListener("free",s);e.removeListener("close",o);e.removeListener("agentRemove",o)}e.on("free",s);e.on("close",o);e.on("agentRemove",o);t.onSocket(e)})};TunnelingAgent.prototype.createSocket=function(t,n){function u(e){e.upgrade=!0}function a(e,t,n){process.nextTick(function(){f(e,t,n)})}function f(e,s,u){o.removeAllListeners();s.removeAllListeners();if(e.statusCode===200){assert.equal(u.length,0);debug("tunneling connection has established");r.sockets[r.sockets.indexOf(i)]=s;n(s)}else{debug("tunneling socket could not be established, statusCode=%d",e.statusCode);var a=new Error("tunneling socket could not be established, statusCode="+e.statusCode);a.code="ECONNRESET";t.request.emit("error",a);r.removeSocket(i)}}function l(e){o.removeAllListeners();debug("tunneling socket could not be established, cause=%s\n",e.message,e.stack);var n=new Error("tunneling socket could not be established, cause="+e.message);n.code="ECONNRESET";t.request.emit("error",n);r.removeSocket(i)}var r=this,i={};r.sockets.push(i);var s=mergeOptions({},r.proxyOptions,{method:"CONNECT",path:t.host+":"+t.port,agent:!1});if(s.proxyAuth){s.headers=s.headers||{};s.headers["Proxy-Authorization"]="Basic "+(new Buffer(s.proxyAuth)).toString("base64")}debug("making CONNECT request");var o=r.request(s);o.useChunkedEncodingByDefault=!1;o.once("response",u);o.once("upgrade",a);o.once("connect",f);o.once("error",l);o.end()};TunnelingAgent.prototype.removeSocket=function(t){var n=this.sockets.indexOf(t);if(n===-1)return;this.sockets.splice(n,1);var r=this.requests.shift();r&&this.createSocket(r,function(e){r.request.onSocket(e)})};var debug;process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?debug=function(){var e=Array.prototype.slice.call(arguments);typeof e[0]=="string"?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:");console.error.apply(console,e)}:debug=function(){};exports.debug=debug;