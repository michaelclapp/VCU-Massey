/**
 * Usage: node test.js
 */function eq(e,t){console.log("Test: "+e+" === "+t);assert.strictEqual.apply(null,arguments)}var mime=require("./mime"),assert=require("assert");console.log(Object.keys(mime.extensions).length+" types");console.log(Object.keys(mime.types).length+" extensions\n");eq("text/plain",mime.lookup("text.txt"));eq("text/plain",mime.lookup(".text.txt"));eq("text/plain",mime.lookup(".txt"));eq("text/plain",mime.lookup("txt"));eq("application/octet-stream",mime.lookup("text.nope"));eq("fallback",mime.lookup("text.fallback","fallback"));eq("application/octet-stream",mime.lookup("constructor"));eq("text/plain",mime.lookup("TEXT.TXT"));eq("txt",mime.extension(mime.types.text));eq("html",mime.extension(mime.types.htm));eq("bin",mime.extension("application/octet-stream"));eq(undefined,mime.extension("constructor"));eq("application/octet-stream",mime.lookup("file.buffer"));eq("audio/mp4",mime.lookup("file.m4a"));eq("UTF-8",mime.charsets.lookup("text/plain"));eq(undefined,mime.charsets.lookup(mime.types.js));eq("fallback",mime.charsets.lookup("application/octet-stream","fallback"));console.log("\nOK");