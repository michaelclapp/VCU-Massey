function Custom(){Emitter.call(this)}var Emitter=require("..");Custom.prototype.__proto__=Emitter.prototype;describe("Custom",function(){describe("with Emitter.call(this)",function(){it("should work",function(e){var t=new Custom;t.on("foo",e);t.emit("foo")})})});describe("Emitter",function(){describe(".on(event, fn)",function(){it("should add listeners",function(){var e=new Emitter,t=[];e.on("foo",function(e){t.push("one",e)});e.on("foo",function(e){t.push("two",e)});e.emit("foo",1);e.emit("bar",1);e.emit("foo",2);t.should.eql(["one",1,"two",1,"one",2,"two",2])})});describe(".once(event, fn)",function(){it("should add a single-shot listener",function(){var e=new Emitter,t=[];e.once("foo",function(e){t.push("one",e)});e.emit("foo",1);e.emit("foo",2);e.emit("foo",3);e.emit("bar",1);t.should.eql(["one",1])})});describe(".off(event, fn)",function(){it("should remove a listener",function(){function n(){t.push("one")}function r(){t.push("two")}var e=new Emitter,t=[];e.on("foo",n);e.on("foo",r);e.off("foo",r);e.emit("foo");t.should.eql(["one"])});it("should work with .once()",function(){function n(){t.push("one")}var e=new Emitter,t=[];e.once("foo",n);e.off("foo",n);e.emit("foo");t.should.eql([])});it("should work when called from an event",function(){function n(){t=!0}var e=new Emitter,t;e.on("tobi",function(){e.off("tobi",n)});e.on("tobi",n);e.emit("tobi");t.should.be.true;t=!1;e.emit("tobi");t.should.be.false})});describe(".off(event)",function(){it("should remove all listeners for an event",function(){function n(){t.push("one")}function r(){t.push("two")}var e=new Emitter,t=[];e.on("foo",n);e.on("foo",r);e.off("foo");e.emit("foo");e.emit("foo");t.should.eql([])})});describe(".off()",function(){it("should remove all listeners",function(){function n(){t.push("one")}function r(){t.push("two")}var e=new Emitter,t=[];e.on("foo",n);e.on("bar",r);e.emit("foo");e.emit("bar");e.off();e.emit("foo");e.emit("bar");t.should.eql(["one","two"])})});describe(".listeners(event)",function(){describe("when handlers are present",function(){it("should return an array of callbacks",function(){function t(){}var e=new Emitter;e.on("foo",t);e.listeners("foo").should.eql([t])})});describe("when no handlers are present",function(){it("should return an empty array",function(){var e=new Emitter;e.listeners("foo").should.eql([])})})});describe(".hasListeners(event)",function(){describe("when handlers are present",function(){it("should return true",function(){var e=new Emitter;e.on("foo",function(){});e.hasListeners("foo").should.be.true})});describe("when no handlers are present",function(){it("should return false",function(){var e=new Emitter;e.hasListeners("foo").should.be.false})})})});describe("Emitter(obj)",function(){it("should mixin",function(e){var t={};Emitter(t);t.on("something",e);t.emit("something")})});