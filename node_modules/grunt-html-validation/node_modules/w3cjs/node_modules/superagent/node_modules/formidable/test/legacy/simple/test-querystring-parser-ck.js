function test(e){gently=new Gently;parser=new QuerystringParser;e();gently.verify(e.name)}var common=require("../common"),QuerystringParser=require(common.lib+"/querystring_parser").QuerystringParser,Buffer=require("buffer").Buffer,gently,parser;test(function e(){assert.equal(parser.buffer,"");assert.equal(parser.constructor.name,"QuerystringParser")});test(function(){var t=new Buffer("a=1");assert.equal(parser.write(t),t.length);var n=new Buffer("&b=2");parser.write(n);assert.equal(parser.buffer,t+n)});test(function(){var t={a:["b",{c:"d"}],e:"f"};gently.expect(GENTLY.hijacked.querystring,"parse",function(e){assert.equal(e,parser.buffer);return t});gently.expect(parser,"onField",Object.keys(t).length,function(e,n){assert.deepEqual(t[e],n)});gently.expect(parser,"onEnd");parser.buffer="my buffer";parser.end();assert.equal(parser.buffer,"")});