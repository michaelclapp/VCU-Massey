function test(e){parser=new MultipartParser;e()}var common=require("../common"),multipartParser=require(common.lib+"/multipart_parser"),MultipartParser=multipartParser.MultipartParser,events=require("events"),Buffer=require("buffer").Buffer,parser;test(function e(){assert.equal(parser.boundary,null);assert.equal(parser.state,0);assert.equal(parser.flags,0);assert.equal(parser.boundaryChars,null);assert.equal(parser.index,null);assert.equal(parser.lookbehind,null);assert.equal(parser.constructor.name,"MultipartParser")});test(function(){var t="abc";parser.initWithBoundary(t);assert.deepEqual(Array.prototype.slice.call(parser.boundary),[13,10,45,45,97,98,99]);assert.equal(parser.state,multipartParser.START);assert.deepEqual(parser.boundaryChars,{10:!0,13:!0,45:!0,97:!0,98:!0,99:!0})});test(function(){var t="abc",n=new Buffer(5);parser.initWithBoundary(t);n.write("--ad","ascii",0);assert.equal(parser.write(n),5)});test(function(){(function(){assert.equal(parser.end().message,"MultipartParser.end(): stream ended unexpectedly: "+parser.explain())})();(function(){parser.state=multipartParser.END;assert.strictEqual(parser.end(),undefined)})()});