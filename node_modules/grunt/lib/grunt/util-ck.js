/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */"use strict";var spawn=require("child_process").spawn,nodeUtil=require("util"),path=require("path"),util=module.exports={};util.task=require("../util/task");util.namespace=require("../util/namespace");util.exit=require("../util/exit").exit;util.hooker=require("hooker");util.async=require("async");var _=util._=require("lodash"),which=require("which").sync;_.str=require("underscore.string");_.mixin(_.str.exports());util.callbackify=function(e){return function(){var n=e.apply(this,arguments),r=arguments.length;if(r===e.length)return;var i=arguments[r-1];typeof i=="function"&&i(n)}};util.error=function(e,t){nodeUtil.isError(e)||(e=new Error(e));t&&(e.origError=t);return e};util.linefeed=process.platform==="win32"?"\r\n":"\n";util.normalizelf=function(e){return e.replace(/\r\n|\n/g,util.linefeed)};var kindsOf={};"Number String Boolean Function RegExp Array Date Error".split(" ").forEach(function(e){kindsOf["[object "+e+"]"]=e.toLowerCase()});util.kindOf=function(e){return e==null?String(e):kindsOf[kindsOf.toString.call(e)]||"object"};util.toArray=Function.call.bind(Array.prototype.slice);util.repeat=function(e,t){return(new Array(e+1)).join(t||" ")};util.pluralize=function(e,t,n){var r=t.split(n||"/");return e===1?r[0]||"":r[1]||""};util.recurse=function e(t,n,r){var i;if(r&&r(t)===!1)return t;if(util.kindOf(t)==="array")return t.map(function(t){return e(t,n,r)});if(util.kindOf(t)==="object"){i={};Object.keys(t).forEach(function(s){i[s]=e(t[s],n,r)});return i}return n(t)};util.spawn=function(e,t){var n=function(n,r,i){r=_.rtrim(r);i=_.rtrim(i);var s={stdout:r,stderr:i,code:n,toString:function(){return n===0?r:"fallback"in e?e.fallback:e.grunt?i||r:i}};t(n===0||"fallback"in e?null:new Error(i),s,n)},r,i,s=/[\\\/]/g;if(e.grunt){r=process.argv[0];i=[process.argv[1]].concat(e.args)}else{try{s.test(e.cmd)?r=e.cmd.replace(s,path.sep):r=which(e.cmd)}catch(o){n(127,"",String(o));return}i=e.args}var u=spawn(r,i,e.opts),a=new Buffer(""),f=new Buffer("");u.stdout&&u.stdout.on("data",function(e){a=Buffer.concat([a,new Buffer(e)])});u.stderr&&u.stderr.on("data",function(e){f=Buffer.concat([f,new Buffer(e)])});u.on("close",function(e){n(e,a.toString(),f.toString())});return u};