"use strict";var grunt=require("../../lib/grunt"),fs=require("fs"),path=require("path"),Tempfile=require("temporary/lib/file");exports["util.callbackify"]={"return":function(e){function t(e,t){return e+t}e.expect(1);grunt.util.callbackify(t)(1,2,function(t){e.equal(t,3,"should be the correct result.");e.done()})},"callback (sync)":function(e){function t(e,t,n){n(e+t)}e.expect(1);grunt.util.callbackify(t)(1,2,function(t){e.equal(t,3,"should be the correct result.");e.done()})},"callback (async)":function(e){function t(e,t,n){setTimeout(n.bind(null,e+t),0)}e.expect(1);grunt.util.callbackify(t)(1,2,function(t){e.equal(t,3,"should be the correct result.");e.done()})}};exports.util={error:function(e){e.expect(9);var t=new Error("Original error."),n=grunt.util.error("Test message.");e.ok(n instanceof Error,"Should be an Error.");e.equal(n.name,"Error","Should be an Error.");e.equal(n.message,"Test message.","Should have the correct message.");n=grunt.util.error("Test message.",t);e.ok(n instanceof Error,"Should be an Error.");e.equal(n.name,"Error","Should be an Error.");e.equal(n.message,"Test message.","Should have the correct message.");e.equal(n.origError,t,"Should reflect the original error.");var r=new Error("Test message.");n=grunt.util.error(r,t);e.equal(n,r,"Should be the passed-in Error.");e.equal(n.origError,t,"Should reflect the original error.");e.done()},linefeed:function(e){e.expect(1);process.platform==="win32"?e.equal(grunt.util.linefeed,"\r\n","linefeed should be operating-system appropriate."):e.equal(grunt.util.linefeed,"\n","linefeed should be operating-system appropriate.");e.done()},normalizelf:function(e){e.expect(1);process.platform==="win32"?e.equal(grunt.util.normalizelf("foo\nbar\r\nbaz\r\n\r\nqux\n\nquux"),"foo\r\nbar\r\nbaz\r\n\r\nqux\r\n\r\nquux","linefeeds should be normalized"):e.equal(grunt.util.normalizelf("foo\nbar\r\nbaz\r\n\r\nqux\n\nquux"),"foo\nbar\nbaz\n\nqux\n\nquux","linefeeds should be normalized");e.done()}};exports["util.spawn"]={setUp:function(e){this.script=path.resolve("test/fixtures/spawn.js");e()},"exit code 0":function(e){e.expect(6);grunt.util.spawn({cmd:process.execPath,args:[this.script,0]},function(t,n,r){e.equals(t,null);e.equals(r,0);e.equals(n.stdout,"stdout");e.equals(n.stderr,"stderr");e.equals(n.code,0);e.equals(String(n),"stdout");e.done()})},"exit code 0, fallback":function(e){e.expect(6);grunt.util.spawn({cmd:process.execPath,args:[this.script,0],fallback:"ignored if exit code is 0"},function(t,n,r){e.equals(t,null);e.equals(r,0);e.equals(n.stdout,"stdout");e.equals(n.stderr,"stderr");e.equals(n.code,0);e.equals(String(n),"stdout");e.done()})},"non-zero exit code":function(e){e.expect(7);grunt.util.spawn({cmd:process.execPath,args:[this.script,123]},function(t,n,r){e.ok(t instanceof Error);e.equals(t.message,"stderr");e.equals(r,123);e.equals(n.stdout,"stdout");e.equals(n.stderr,"stderr");e.equals(n.code,123);e.equals(String(n),"stderr");e.done()})},"non-zero exit code, fallback":function(e){e.expect(6);grunt.util.spawn({cmd:process.execPath,args:[this.script,123],fallback:"custom fallback"},function(t,n,r){e.equals(t,null);e.equals(r,123);e.equals(n.stdout,"stdout");e.equals(n.stderr,"stderr");e.equals(n.code,123);e.equals(String(n),"custom fallback");e.done()})},"cmd not found":function(e){e.expect(3);grunt.util.spawn({cmd:"nodewtfmisspelled"},function(t,n,r){e.ok(t instanceof Error);e.equals(r,127);e.equals(n.code,127);e.done()})},"cmd not found, fallback":function(e){e.expect(4);grunt.util.spawn({cmd:"nodewtfmisspelled",fallback:"use a fallback or good luck"},function(t,n,r){e.equals(t,null);e.equals(r,127);e.equals(n.code,127);e.equals(String(n),"use a fallback or good luck");e.done()})},"cmd not in path":function(e){e.expect(6);var t=process.platform==="win32";grunt.util.spawn({cmd:"test\\fixtures\\exec"+(t?".cmd":".sh")},function(t,n,r){e.equals(t,null);e.equals(r,0);e.equals(n.stdout,"done");e.equals(n.stderr,"");e.equals(n.code,0);e.equals(String(n),"done");e.done()})},"cmd not in path (with cwd)":function(e){e.expect(6);var t=process.platform==="win32";grunt.util.spawn({cmd:"./exec"+(t?".cmd":".sh"),opts:{cwd:"test/fixtures"}},function(t,n,r){e.equals(t,null);e.equals(r,0);e.equals(n.stdout,"done");e.equals(n.stderr,"");e.equals(n.code,0);e.equals(String(n),"done");e.done()})},grunt:function(e){e.expect(3);grunt.util.spawn({grunt:!0,args:["--gruntfile","test/fixtures/Gruntfile-print-text.js","print:foo"]},function(t,n,r){e.equals(t,null);e.equals(r,0);e.ok(/^OUTPUT: foo/m.test(n.stdout),"stdout should contain output indicating the grunt task was run.");e.done()})},"grunt (with cwd)":function(e){e.expect(3);grunt.util.spawn({grunt:!0,args:["--gruntfile","Gruntfile-print-text.js","print:foo"],opts:{cwd:"test/fixtures"}},function(t,n,r){e.equals(t,null);e.equals(r,0);e.ok(/^OUTPUT: foo/m.test(n.stdout),"stdout should contain output indicating the grunt task was run.");e.done()})},"grunt result.toString() with error":function(e){e.expect(4);grunt.util.spawn({grunt:!0,args:["nonexistentTask"]},function(t,n,r){e.ok(t instanceof Error,"Should be an Error.");e.equal(t.name,"Error","Should be an Error.");e.equals(r,3);e.ok(/Warning: Task "nonexistentTask" not found./m.test(n.toString()),"stdout should contain output indicating the grunt task was (attempted to be) run.");e.done()})},"custom stdio stream(s)":function(e){e.expect(6);var t=new Tempfile,n=new Tempfile,r=fs.openSync(t.path,"a"),i=fs.openSync(n.path,"a"),s=grunt.util.spawn({cmd:process.execPath,args:[this.script,0],opts:{stdio:[null,r,i]}},function(r,i,s){e.equals(s,0);e.equals(String(fs.readFileSync(t.path)),"stdout\n","Child process stdout should have been captured via custom stream.");e.equals(String(fs.readFileSync(n.path)),"stderr\n","Child process stderr should have been captured via custom stream.");t.unlinkSync();n.unlinkSync();e.equals(i.stdout,"","Nothing will be passed to the stdout string when spawn stdio is a custom stream.");e.done()});e.ok(!s.stdout,"child should not have a stdout property.");e.ok(!s.stderr,"child should not have a stderr property.")}};exports["util.spawn.multibyte"]={setUp:function(e){this.script=path.resolve("test/fixtures/spawn-multibyte.js");e()},"partial stdout":function(e){e.expect(4);grunt.util.spawn({cmd:process.execPath,args:[this.script]},function(t,n,r){e.equals(t,null);e.equals(r,0);e.equals(n.stdout,"こんにちは");e.equals(n.stderr,"こんにちは");e.done()})}};exports["util.underscore.string"]=function(e){e.expect(4);e.equals(grunt.util._.trim("    foo     "),"foo","Should have trimmed the string.");e.equals(grunt.util._.capitalize("foo"),"Foo","Should have capitalized the first letter.");e.equals(grunt.util._.words("one two three").length,3,"Should have counted three words.");e.ok(grunt.util._.isBlank(" "),"Should be blank.");e.done()};