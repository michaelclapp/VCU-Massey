"use strict";function delay(e){setTimeout(e,10)}var result=function(){var e,t=function(){[].push.apply(e,arguments)};return{reset:function(){e=[]},push:t,pushTaskname:function(){t(this.name)},get:function(){return e},getJoined:function(){return e.join("")}}}(),requireTask=require.bind(exports,"../../lib/util/task.js");exports["new Task"]={create:function(e){e.expect(1);var t=requireTask();e.ok(t.create()instanceof t.Task,"It should return a Task instance.");e.done()}};exports.Tasks={setUp:function(e){result.reset();this.task=requireTask().create();var t=this.task;t.registerTask("nothing","Do nothing.",function(){});e()},"Task#registerTask":function(e){e.expect(1);var t=this.task;e.ok("nothing"in t._tasks,"It should register the passed task.");e.done()},"Task#registerTask (alias)":function(e){e.expect(1);var t=this.task;t.registerTask("a","Push task name onto result.",result.pushTaskname);t.registerTask("b","Push task name onto result.",result.pushTaskname);t.registerTask("c d","Push task name onto result.",result.pushTaskname);t.registerTask("y",["a","b","c d"]);t.registerTask("z",["a","b","nonexistent","c d"]);t.options({error:function(){result.push("!"+this.name)},done:function(){e.strictEqual(result.getJoined(),"abc d!z","The specified tasks should have run, in-order.");e.done()}});t.run("y","z").start()},"Task#isTaskAlias":function(e){e.expect(2);var t=this.task;t.registerTask("a","nothing",function(){});t.registerTask("b",["a"]);e.strictEqual(t.isTaskAlias("a"),!1,"It should not be an alias.");e.strictEqual(t.isTaskAlias("b"),!0,"It should be an alias.");e.done()},"Task#renameTask":function(e){e.expect(4);var t=this.task;t.renameTask("nothing","newnothing");e.ok("newnothing"in t._tasks,"It should rename the specified task.");e.equal("nothing"in t._tasks,!1,"It should remove the previous task.");e.doesNotThrow(function(){t.run("newnothing")},"It should be accessible by its new name.");e.throws(function(){t.run("nothing")},"It should not be accessible by its previous name and throw an exception.");e.done()},"Task#run (exception handling)":function(e){e.expect(4);var t=this.task;e.doesNotThrow(function(){t.run("nothing")},"Registered tasks should be runnable.");e.throws(function(){t.run("nonexistent")},"Attempting to run unregistered tasks should throw an exception.");t.options({error:result.pushTaskname});e.doesNotThrow(function(){t.run("nonexistent")},"It should not throw an exception because an error handler is defined.");e.deepEqual(result.get(),[null],"Non-nested tasks have a null name.");e.done()},"Task#run (async failing)":function(e){e.expect(1);var t=this.task,n=[];t.registerTask("sync1","sync, gonna succeed",function(){});t.registerTask("sync2","sync, gonna fail",function(){return!1});t.registerTask("sync3","sync, gonna fail",function(){return new Error("sync3: Error")});t.registerTask("sync4","sync, gonna fail",function(){return new TypeError("sync4: TypeError")});t.registerTask("sync5","sync, gonna fail",function(){throw new Error("sync5: Error")});t.registerTask("sync6","sync, gonna fail",function(){throw new TypeError("sync6: TypeError")});t.registerTask("syncs",["sync1","sync2","sync3","sync4","sync5","sync6"]);t.registerTask("async1","async, gonna succeed",function(){var e=this.async();setTimeout(function(){e()},1)});t.registerTask("async2","async, gonna fail",function(){var e=this.async();setTimeout(function(){e(!1)},1)});t.registerTask("async3","async, gonna fail",function(){var e=this.async();setTimeout(function(){e(new Error("async3: Error"))},1)});t.registerTask("async4","async, gonna fail",function(){var e=this.async();setTimeout(function(){e(new TypeError("async4: TypeError"))},1)});t.registerTask("asyncs",["async1","async2","async3","async4"]);t.options({error:function(e){n.push({name:e.name,message:e.message})},done:function(){e.deepEqual(n,[{name:"Error",message:'Task "sync2" failed.'},{name:"Error",message:"sync3: Error"},{name:"TypeError",message:"sync4: TypeError"},{name:"Error",message:"sync5: Error"},{name:"TypeError",message:"sync6: TypeError"},{name:"Error",message:'Task "async2" failed.'},{name:"Error",message:"async3: Error"},{name:"TypeError",message:"async4: TypeError"}],"The specified tasks should have run, in-order.");e.done()}});t.run("syncs","asyncs").start()},"Task#run (nested, exception handling)":function(e){e.expect(2);var t=this.task;t.registerTask("yay","Run a registered task.",function(){e.doesNotThrow(function(){t.run("nothing")},"Registered tasks should be runnable.")});t.registerTask("nay","Attempt to run an unregistered task.",function(){e.throws(function(){t.run("nonexistent")},"Attempting to run unregistered tasks should throw an exception.")});t.options({done:e.done});t.run("yay","nay").start()},"Task#run (signatures, queue order)":function(e){e.expect(1);var t=this.task;t.registerTask("a","Push task name onto result.",result.pushTaskname);t.registerTask("b","Push task name onto result.",result.pushTaskname);t.registerTask("c","Push task name onto result.",result.pushTaskname);t.registerTask("d","Push task name onto result.",result.pushTaskname);t.registerTask("e","Push task name onto result.",result.pushTaskname);t.registerTask("f g","Push task name onto result.",result.pushTaskname);t.options({done:function(){e.strictEqual(result.getJoined(),"abcdef g","The specified tasks should have run, in-order.");e.done()}});t.run("a").run("b","c").run(["d","e"]).run("f g").start()},"Task#run (colon separated arguments)":function(e){e.expect(1);var t=this.task;t.registerTask("a","Push task name and args onto result.",function(e,t){result.push([this.nameArgs,1,this.name,e,t])});t.registerTask("a:b","Push task name and args onto result.",function(e,t){result.push([this.nameArgs,2,this.name,e,t])});t.registerTask("a:b:c","Push task name and args onto result.",function(e,t){result.push([this.nameArgs,3,this.name,e,t])});t.options({done:function(){e.deepEqual(result.get(),[["a",1,"a",undefined,undefined],["a:x",1,"a","x",undefined],["a:x:c",1,"a","x","c"],["a:b ",1,"a","b ",undefined],["a: b:c",1,"a"," b","c"],["a:x\\:y:\\:z\\:",1,"a","x:y",":z:"],["a:b",2,"a:b",undefined,undefined],["a:b:x",2,"a:b","x",undefined],["a:b:x:y",2,"a:b","x","y"],["a:b:c ",2,"a:b","c ",undefined],["a:b:x\\:y:\\:z\\:",2,"a:b","x:y",":z:"],["a:b:c",3,"a:b:c",undefined,undefined],["a:b:c: d",3,"a:b:c"," d",undefined]],"Named tasks should be called as-specified if possible, and arguments should be passed properly.");e.done()}});t.run("a","a:x","a:x:c","a:b ","a: b:c","a:x\\:y:\\:z\\:","a:b","a:b:x","a:b:x:y","a:b:c ","a:b:x\\:y:\\:z\\:","a:b:c","a:b:c: d").start()},"Task#run (nested tasks, queue order)":function(e){e.expect(1);var t=this.task;t.registerTask("a","Push task name onto result and run other tasks.",function(){result.push(this.name);t.run("b","e")});t.registerTask("b","Push task name onto result and run other tasks.",function(){result.push(this.name);t.run("c","d d")});t.registerTask("c","Push task name onto result.",result.pushTaskname);t.registerTask("d d","Push task name onto result.",result.pushTaskname);t.registerTask("e","Push task name onto result and run other tasks.",function(){result.push(this.name);t.run("f f")});t.registerTask("f f","Push task name onto result.",result.pushTaskname);t.registerTask("g","Push task name onto result.",result.pushTaskname);t.options({done:function(){e.strictEqual(result.getJoined(),"abcd def fg","The specified tasks should have run, in-order.");e.done()}});t.run("a","g").start()},"Task#run (async, nested tasks, queue order)":function(e){e.expect(1);var t=this.task;t.registerTask("a","Push task name onto result and run other tasks.",function(){result.push(this.name);t.run("b","e");delay(this.async())});t.registerTask("b","Push task name onto result and run other tasks.",function(){result.push(this.name);delay(this.async());t.run("c","d d")});t.registerTask("c","Push task name onto result.",result.pushTaskname);t.registerTask("d d","Push task name onto result.",result.pushTaskname);t.registerTask("e","Push task name onto result and run other tasks.",function(){delay(this.async());result.push(this.name);t.run("f f")});t.registerTask("f f","Push task name onto result and run other tasks.",function(){this.async()();result.push(this.name);t.run("g")});t.registerTask("g","Push task name onto result.",result.pushTaskname);t.registerTask("h","Push task name onto result.",result.pushTaskname);t.options({done:function(){e.strictEqual(result.getJoined(),"abcd def fgh","The specified tasks should have run, in-order.");e.done()}});t.run("a","h").start()},"Task#current":function(e){e.expect(8);var t=this.task;e.deepEqual(t.current,{},"Should start empty.");t.registerTask("a","Sample task.",function(){e.equal(t.current,this,"This and task.current should be the same object.");e.equal(t.current.nameArgs,"a:b:c","Should be task name + args, as-specified.");e.equal(t.current.name,"a","Should be just the task name, no args.");e.equal(typeof t.current.async,"function","Should be a function.");e.deepEqual(t.current.args,["b","c"],"Should be an array of args.");e.deepEqual(t.current.flags,{b:!0,c:!0},"Should be a map of flags.")});t.options({done:function(){e.deepEqual(t.current,{},"Should be empty again once tasks are done.");e.done()}});t.run("a:b:c").start()},"Task#clearQueue":function(e){e.expect(1);var t=this.task;t.registerTask("a","Push task name onto result.",result.pushTaskname);t.registerTask("b","Push task name onto result.",result.pushTaskname);t.registerTask("c","Clear the queue.",function(){result.push(this.name);t.clearQueue().run("f")});t.registerTask("d","Push task name onto result.",result.pushTaskname);t.registerTask("e","Push task name onto result.",result.pushTaskname);t.registerTask("f","Push task name onto result.",result.pushTaskname);t.options({done:function(){e.strictEqual(result.getJoined(),"abcf","The specified tasks should have run, in-order.");e.done()}});t.run("a","b","c","d","e").start()},"Task#mark":function(e){e.expect(1);var t=this.task;t.registerTask("a","Explode.",function(){throw t.taskError("whoops.")});t.registerTask("b","This task should never run.",result.pushTaskname);t.registerTask("c","This task should never run.",result.pushTaskname);t.registerTask("d","Push task name onto result.",result.pushTaskname);t.registerTask("e","Explode.",function(){throw t.taskError("whoops.")});t.registerTask("f","This task should never run.",result.pushTaskname);t.registerTask("g","Push task name onto result.",result.pushTaskname);t.registerTask("h","Push task name onto result.",result.pushTaskname);t.registerTask("i","Explode.",function(){throw t.taskError("whoops.")});t.registerTask("j","Run a task and push task name onto result.",function(){t.run("k");result.push(this.name)});t.registerTask("k","Explode.",function(){throw t.taskError("whoops.")});t.registerTask("l","This task should never run.",result.pushTaskname);t.registerTask("m","Push task name onto result.",result.pushTaskname);t.registerTask("n","Run a task and push task name onto result.",function(){t.run("o");result.push(this.name)});t.registerTask("o","Explode.",function(){throw t.taskError("whoops.")});t.registerTask("p","Push task name onto result.",result.pushTaskname);t.options({error:function(){result.push("!"+this.name);t.clearQueue({untilMarker:!0})},done:function(){e.strictEqual(result.getJoined(),"!ad!egh!ij!kmn!op","The specified tasks should have run, in-order.");e.done()}});t.run("a","b","c").mark().run("d","e","f").mark().run("g","h","i").mark().run("j","l").mark().run("m","n").mark().run("p").mark().start()},"Task#requires":function(e){e.expect(1);var t=this.task;t.registerTask("notrun","This task is never run.",function(){});t.registerTask("a a","Push task name onto result, but fail.",function(){result.push(this.name);return!1});t.registerTask("b","Push task name onto result, but fail.",function(){var e=this.async();delay(function(){e(!1)});result.push(this.name)});t.registerTask("c","Succeed.",result.pushTaskname);t.registerTask("d","Succeed.",result.pushTaskname);t.registerTask("e","Succeed because all required tasks ran and succeeded.",function(){t.requires("c","d");result.push(this.name)});t.registerTask("x","Fail because a required task never ran.",function(){t.requires("c","notrun","d");result.push(this.name)});t.registerTask("y","Fail because a synchronous required task has failed.",function(){t.requires("a a","c","d");result.push(this.name)});t.registerTask("z","Fail because an asynchronous required task has failed.",function(){t.requires("b","c","d");result.push(this.name)});t.options({error:function(){result.push("!"+this.name)},done:function(){e.strictEqual(result.getJoined(),"a a!a ab!bcde!x!y!z","Tasks whose requirements have failed or are missing should not run.");e.done()}});t.run("a a","b","c","d","e","x","y","z").start()}};exports["Task#parseArgs"]={setUp:function(e){var t=requireTask().create();this.parseTest=function(){return t.parseArgs(arguments)};e()},arguments:function(e){e.expect(4);e.deepEqual(this.parseTest("foo bar"),["foo bar"],"single argument should be converted to array.");e.deepEqual(this.parseTest("foo bar: aa : bb "),["foo bar: aa : bb "],"single argument should be converted to array.");e.deepEqual(this.parseTest("foo bar","baz","test 1 2 3"),["foo bar","baz","test 1 2 3"],"arguments should be converted to array.");e.deepEqual(this.parseTest("foo bar","baz:x y z","test 1 2 3: 4 : 5"),["foo bar","baz:x y z","test 1 2 3: 4 : 5"],"arguments should be converted to array.");e.done()},array:function(e){e.expect(1);e.deepEqual(this.parseTest(["foo bar","baz:x y z","test 1 2 3: 4 : 5"]),["foo bar","baz:x y z","test 1 2 3: 4 : 5"],"passed array should be used.");e.done()},object:function(e){e.expect(1);var t={};e.deepEqual(this.parseTest(t),[t],"single object should be returned as array.");e.done()},nothing:function(e){e.expect(1);e.deepEqual(this.parseTest(),[],"should return an empty array if nothing passed.");e.done()}};exports["Task#splitArgs"]={setUp:function(e){this.task=requireTask().create();e()},arguments:function(e){e.expect(9);var t=this.task;e.deepEqual(t.splitArgs(),[],"missing items = empty array.");e.deepEqual(t.splitArgs(""),[],"missing items = empty array.");e.deepEqual(t.splitArgs("a"),["a"],"single item should be parsed.");e.deepEqual(t.splitArgs("a:b:c"),["a","b","c"],"mutliple items should be parsed.");e.deepEqual(t.splitArgs("a::c"),["a","","c"],"missing items should be parsed.");e.deepEqual(t.splitArgs("::"),["","",""],"missing items should be parsed.");e.deepEqual(t.splitArgs("\\:a:\\:b\\::c\\:"),[":a",":b:","c:"],"escaped colons should be unescaped.");e.deepEqual(t.splitArgs("a\\\\:b\\\\:c"),["a\\","b\\","c"],"escaped backslashes should not be parsed.");e.deepEqual(t.splitArgs("\\:a\\\\:\\\\\\:b\\:\\\\:c\\\\\\:\\\\"),[":a\\","\\:b:\\","c\\:\\"],"please avoid doing this, ok?");e.done()}};