/*jslint node: true, plusplus: true, stupid: true */"use strict";function mapReadFiles(e){return e.map(function(e){if(fs.existsSync(e))return fs.readFileSync(e,"utf8");console.log("Error: could not find: "+e);process.exit()})}function extract_stylesheets(e){var t=e('link[rel="stylesheet"]');return t.map(function(e){return t[e].attribs.href}).filter(function(e){return e.indexOf("//")===-1})}function filterUnusedSelectors(e,t,n){return t.filter(function(t){var r,i,s;if(t[0]==="@")return!0;if(n.indexOf(t)!==-1)return!0;for(i=0;i<e.length;++i){try{r=e[i](t)}catch(o){s=t.replace(/\/\*.*?\*\//).match(/(?:[^\s"]+|"[^"]*")+/g).map(function(e){return e.match(/(?:[^ :"]+|"[^"]*")+/g)[0]}).join(" ");r=e[i](s)}if(r.length!==0)return!0}return!1})}function filterUnusedRules(e,t,n){var r=t.rules;r.forEach(function(t){t.type==="rule"?t.selectors=filterUnusedSelectors(e,t.selectors,n):t.type==="media"&&(t.rules=filterUnusedRules(e,{rules:t.rules},n).stylesheet.rules)});r=r.filter(function(e){return e.type==="rule"&&e.selectors.length===0?!1:e.type==="media"&&e.rules.length===0?!1:!0});return{stylesheet:{rules:r}}}var fs=require("fs");module.exports.mapReadFiles=mapReadFiles;module.exports.extract_stylesheets=extract_stylesheets;module.exports.filterUnusedRules=filterUnusedRules;