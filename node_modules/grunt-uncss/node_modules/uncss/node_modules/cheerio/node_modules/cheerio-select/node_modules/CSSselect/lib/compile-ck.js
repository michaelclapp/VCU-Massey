/*
	compiles a selector to an executable function
*/function compile(e,t){var n=parse(e,t).map(compileRules).reduce(reduceRules,falseFunc);return function(e){return isTag(e)&&n(e)}}function compileRules(e){return sortRules(e).reduce(function(e,t){return e===falseFunc?e:Rules[t.type](e,t)},rootFunc)}function reduceRules(e,t){return t===falseFunc||t===rootFunc||e===trueFunc?e:e===falseFunc||e===rootFunc||t===trueFunc?t:function(r){return e(r)||t(r)}}module.exports=compile;var parse=require("CSSwhat"),DomUtils=require("domutils"),isTag=DomUtils.isTag,Rules=require("./general.js"),sortRules=require("./sort.js"),BaseFuncs=require("./basefunctions.js"),rootFunc=BaseFuncs.rootFunc,trueFunc=BaseFuncs.trueFunc,falseFunc=BaseFuncs.falseFunc,filters=require("./pseudos.js").filters,findOne=DomUtils.findOne,getChildren=DomUtils.getChildren;filters.not=function(e,t){var n=compile(t);return n===falseFunc?e===rootFunc?trueFunc:e:n===trueFunc||n===rootFunc?falseFunc:function(t){return!n(t)&&e(t)}};filters.has=function(e,t){var n=compile(t);return n===falseFunc?falseFunc:function(r){return e(r)&&findOne(n,getChildren(r))!==null}};