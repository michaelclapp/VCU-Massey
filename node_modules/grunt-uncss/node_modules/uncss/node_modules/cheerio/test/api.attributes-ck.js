var expect=require("expect.js"),$=require("../"),fruits=require("./fixtures").fruits,vegetables=require("./fixtures").vegetables,food=require("./fixtures").food,chocolates=require("./fixtures").chocolates,inputs=require("./fixtures").inputs;describe("$(...)",function(){describe(".attr",function(){it("() : should get all the attributes",function(){var e=$("ul",fruits).attr();expect(e.id).to.equal("fruits")});it("(invalid key) : invalid attr should get undefined",function(){var e=$(".apple",fruits).attr("lol");expect(e).to.be(undefined)});it("(valid key) : valid attr should get value",function(){var e=$(".apple",fruits).attr("class");expect(e).to.equal("apple")});it("(key, value) : should set attr",function(){var e=$(fruits),t=$(".pear",e).attr("id","pear");expect($("#pear",e)).to.have.length(1);expect(t.cheerio).to.not.be(undefined)});it("(key, value) : should return an empty object for an empty object",function(){var e=$().attr("key","value");expect(e.length).to.equal(0);expect(e[0]).to.be(undefined)});it("(map) : object map should set multiple attributes",function(){var e=$(fruits);$(".apple",e).attr({id:"apple",style:"color:red;","data-url":"http://apple.com"});var t=$(".apple",e).attr();expect(t.id).to.equal("apple");expect(t.style).to.equal("color:red;");expect(t["data-url"]).to.equal("http://apple.com")});it("(key, function) : should call the function and update the attribute with the return value",function(){var e=$(fruits);e.attr("id",function(e,t){expect(e).to.equal(0);expect(t).to.equal("fruits");return"ninja"});var t=e.attr();expect(t.id).to.equal("ninja")});it("(key, value) : should correctly encode then decode unsafe values",function(){var e=$(".apple",fruits);e.attr("href",'http://github.com/"><script>alert("XSS!")</script><br');expect(e[0].attribs.href).to.equal("http://github.com/&quot;&gt;&lt;script&gt;alert(&quot;XSS!&quot;)&lt;/script&gt;&lt;br");expect(e.attr("href")).to.equal('http://github.com/"><script>alert("XSS!")</script><br');e.attr("href",'http://github.com/"><script>alert("XSS!")</script><br');expect(e.html()).to.not.contain('<script>alert("XSS!")</script>')});it("(key, value) : should coerce values to a string",function(){var e=$(".apple",fruits);e.attr("data-test",1);expect(e[0].attribs["data-test"]).to.equal("1");expect(e.attr("data-test")).to.equal("1")})});describe(".data",function(){it("() : should get all data attributes",function(){var e=$(".linth",chocolates).data();expect(e).to.eql({highlight:"Lindor",origin:"swiss"})});it("() : no data attribute should return an empty object",function(){var e=$(".cailler",chocolates).data();expect(e).to.be.empty()});it("(invalid key) : invalid data attribute should return `undefined` ",function(){var e=$(".frey",chocolates).data("lol");expect(e).to.be(undefined)});it("(valid key) : valid data attribute should get value",function(){var e=$(".linth",chocolates).data("highlight"),t=$(".linth",chocolates).data("origin");expect(e).to.equal("Lindor");expect(t).to.equal("swiss")});it("(hyphen key) : data addribute with hyphen should be camelized ;-)",function(){var e=$(".frey",chocolates).data();expect(e).to.eql({taste:"sweet",bestCollection:"Mahony"})});it("(key, value) : should set data attribute",function(){var e=$(".frey",chocolates).data({balls:"giandor"}),t=$(".linth",chocolates).data("snack","chocoletti");expect(e.data("balls")).to.eql("giandor");expect(t.data("snack")).to.eql("chocoletti")});it("(map) : object map should set multiple data attributes",function(){var e=$(".linth",chocolates).data({id:"Cailler",flop:"Pippilotti Rist",top:"Frigor",url:"http://www.cailler.ch/"})[0].data;expect(e.id).to.equal("Cailler");expect(e.flop).to.equal("Pippilotti Rist");expect(e.top).to.equal("Frigor");expect(e.url).to.equal("http://www.cailler.ch/")});describe("(attr) : data-* attribute type coercion :",function(){it("boolean",function(){var e=$('<div data-bool="true">');expect(e.data("bool")).to.be(!0)});it("number",function(){var e=$('<div data-number="23">');expect(e.data("number")).to.be(23)});it("number (scientific notation is not coerced)",function(){var e=$('<div data-sci="1E10">');expect(e.data("sci")).to.be("1E10")});it("null",function(){var e=$('<div data-null="null">');expect(e.data("null")).to.be(null)});it("object",function(){var e=$("<div data-obj='{ \"a\": 45 }'>");expect(e.data("obj")).to.eql({a:45})});it("array",function(){var e=$('<div data-array="[1, 2, 3]">');expect(e.data("array")).to.eql([1,2,3])})})});describe(".val",function(){it(".val(): on select should get value",function(){var e=$("select#one",inputs).val();expect(e).to.equal("option_selected")});it(".val(): on option should get value",function(){var e=$("select#one option",inputs).eq(0).val();expect(e).to.equal("option_not_selected")});it(".val(): on text input should get value",function(){var e=$('input[type="text"]',inputs).val();expect(e).to.equal("input_text")});it(".val(): on checked checkbox should get value",function(){var e=$('input[name="checkbox_on"]',inputs).val();expect(e).to.equal("on")});it(".val(): on unchecked checkbox should get value",function(){var e=$('input[name="checkbox_off"]',inputs).val();expect(e).to.equal("off")});it(".val(): on radio should get value",function(){var e=$('input[type="radio"]',inputs).val();expect(e).to.equal("on")});it(".val(): on multiple select should get an array of values",function(){var e=$("select#multi",inputs).val();expect(e).to.have.length(2)});it(".val(value): on input text should set value",function(){var e=$('input[type="text"]',inputs).val("test");expect(e.val()).to.equal("test")});it(".val(value): on select should set value",function(){var e=$("select#one",inputs).val("option_not_selected");expect(e.val()).to.equal("option_not_selected")});it(".val(value): on option should set value",function(){var e=$("select#one option",inputs).eq(0).val("option_changed");expect(e.val()).to.equal("option_changed")});it(".val(value): on radio should set value",function(){var e=$('input[name="radio"]',inputs).val("off");expect(e.val()).to.equal("off")});it(".val(values): on multiple select should set multiple values",function(){var e=$("select#multi",inputs).val(["1","3","4"]);expect(e.val()).to.have.length(3)})});describe(".removeAttr",function(){it("(key) : should remove a single attr",function(){var e=$(fruits);expect(e.attr("id")).to.not.be(undefined);e.removeAttr("id");expect(e.attr("id")).to.be(undefined)});it("should return cheerio object",function(){var e=$("ul",fruits).removeAttr("id").cheerio;expect(e).to.be.ok()})});describe(".hasClass",function(){it("(valid class) : should return true",function(){var e=$(fruits),t=$(".apple",e).hasClass("apple");expect(t).to.be.ok()});it("(invalid class) : should return false",function(){var e=$("#fruits",fruits).hasClass("fruits");expect(e).to.not.be.ok()});it("should check multiple classes",function(){var e=$(fruits);$(".apple",e).addClass("red");expect($(".apple",e).hasClass("apple")).to.be.ok();expect($(".apple",e).hasClass("red")).to.be.ok();$(".apple",e).removeClass("apple");expect($("li",e).eq(0).hasClass("apple")).to.not.be.ok()})});describe(".addClass",function(){it("(first class) : should add the class to the element",function(){var e=$(fruits);e.addClass("fruits");var t=e.hasClass("fruits");expect(t).to.be.ok()});it("(single class) : should add the class to the element",function(){var e=$(fruits);$(".apple",e).addClass("fruit");var t=$(".apple",e).hasClass("fruit");expect(t).to.be.ok()});it("(class): adds classes to many selected items",function(){var e=$(fruits);$("li",e).addClass("fruit");expect($(".apple",e).hasClass("fruit")).to.be.ok();expect($(".orange",e).hasClass("fruit")).to.be.ok();expect($(".pear",e).hasClass("fruit")).to.be.ok()});it("(class class class) : should add multiple classes to the element",function(){var e=$(fruits);$(".apple",e).addClass("fruit red tasty");expect($(".apple",e).hasClass("apple")).to.be.ok();expect($(".apple",e).hasClass("fruit")).to.be.ok();expect($(".apple",e).hasClass("red")).to.be.ok();expect($(".apple",e).hasClass("tasty")).to.be.ok()});it("(fn) : should add classes returned from the function",function(){var e=$(fruits).children(),t=[],n=[],r=["apple red","",undefined];e.addClass(function(e,i){t.push(arguments);n.push(this);return r[e]});expect(t).to.eql([[0,"apple"],[1,"orange"],[2,"pear"]]);expect(n).to.eql([e[0],e[1],e[2]]);expect(e.eq(0).hasClass("apple")).to.be.ok();expect(e.eq(0).hasClass("red")).to.be.ok();expect(e.eq(1).hasClass("orange")).to.be.ok();expect(e.eq(2).hasClass("pear")).to.be.ok()})});describe(".removeClass",function(){it("() : should remove all the classes",function(){var e=$(fruits);$(".pear",e).addClass("fruit");$(".pear",e).removeClass();expect($(".pear",e).attr("class")).to.be(undefined)});it('("") : should not modify class list',function(){var e=$(fruits);e.children().removeClass("");expect($(".apple",e)).to.have.length(1)});it("(invalid class) : should not remove anything",function(){var e=$(fruits);$(".pear",e).removeClass("fruit");expect($(".pear",e).hasClass("pear")).to.be.ok()});it("(no class attribute) : should not throw an exception",function(){var e=$(vegetables),t=null;expect(function(){$("li",e).removeClass("vegetable")}).to.not.throwException()});it("(single class) : should remove a single class from the element",function(){var e=$(fruits);$(".pear",e).addClass("fruit");expect($(".pear",e).hasClass("fruit")).to.be.ok();$(".pear",e).removeClass("fruit");expect($(".pear",e).hasClass("fruit")).to.not.be.ok();expect($(".pear",e).hasClass("pear")).to.be.ok()});it("(single class) : should remove a single class from multiple classes on the element",function(){var e=$(fruits);$(".pear",e).addClass("fruit green tasty");expect($(".pear",e).hasClass("fruit")).to.be.ok();expect($(".pear",e).hasClass("green")).to.be.ok();expect($(".pear",e).hasClass("tasty")).to.be.ok();$(".pear",e).removeClass("green");expect($(".pear",e).hasClass("fruit")).to.be.ok();expect($(".pear",e).hasClass("green")).to.not.be.ok();expect($(".pear",e).hasClass("tasty")).to.be.ok()});it("(class class class) : should remove multiple classes from the element",function(){var e=$(fruits);$(".apple",e).addClass("fruit red tasty");expect($(".apple",e).hasClass("apple")).to.be.ok();expect($(".apple",e).hasClass("fruit")).to.be.ok();expect($(".apple",e).hasClass("red")).to.be.ok();expect($(".apple",e).hasClass("tasty")).to.be.ok();$(".apple",e).removeClass("apple red tasty");expect($(".fruit",e).hasClass("apple")).to.not.be.ok();expect($(".fruit",e).hasClass("red")).to.not.be.ok();expect($(".fruit",e).hasClass("tasty")).to.not.be.ok();expect($(".fruit",e).hasClass("fruit")).to.be.ok()});it("(class) : should remove all occurrences of a class name",function(){var e=$('<div class="x x y x z"></div>');expect(e.removeClass("x").hasClass("x")).to.be(!1)});it("(fn) : should remove classes returned from the function",function(){var e=$(fruits).children(),t=[],n=[],r=["apple red","",undefined];e.removeClass(function(e,i){t.push(arguments);n.push(this);return r[e]});expect(t).to.eql([[0,"apple"],[1,"orange"],[2,"pear"]]);expect(n).to.eql([e[0],e[1],e[2]]);expect(e.eq(0).hasClass("apple")).to.not.be.ok();expect(e.eq(0).hasClass("red")).to.not.be.ok();expect(e.eq(1).hasClass("orange")).to.be.ok();expect(e.eq(2).hasClass("pear")).to.be.ok()})});describe(".toggleClass",function(){it("(class class) : should toggle multiple classes from the element",function(){var e=$(fruits);$(".apple",e).addClass("fruit");expect($(".apple",e).hasClass("apple")).to.be.ok();expect($(".apple",e).hasClass("fruit")).to.be.ok();expect($(".apple",e).hasClass("red")).to.not.be.ok();$(".apple",e).toggleClass("apple red");expect($(".fruit",e).hasClass("apple")).to.not.be.ok();expect($(".fruit",e).hasClass("red")).to.be.ok();expect($(".fruit",e).hasClass("fruit")).to.be.ok()});it("(class class, true) : should add multiple classes to the element",function(){var e=$(fruits);$(".apple",e).addClass("fruit");expect($(".apple",e).hasClass("apple")).to.be.ok();expect($(".apple",e).hasClass("fruit")).to.be.ok();expect($(".apple",e).hasClass("red")).to.not.be.ok();$(".apple",e).toggleClass("apple red",!0);expect($(".fruit",e).hasClass("apple")).to.be.ok();expect($(".fruit",e).hasClass("red")).to.be.ok();expect($(".fruit",e).hasClass("fruit")).to.be.ok()});it("(class class, false) : should remove multiple classes from the element",function(){var e=$(fruits);$(".apple",e).addClass("fruit");expect($(".apple",e).hasClass("apple")).to.be.ok();expect($(".apple",e).hasClass("fruit")).to.be.ok();expect($(".apple",e).hasClass("red")).to.not.be.ok();$(".apple",e).toggleClass("apple red",!1);expect($(".fruit",e).hasClass("apple")).to.not.be.ok();expect($(".fruit",e).hasClass("red")).to.not.be.ok();expect($(".fruit",e).hasClass("fruit")).to.be.ok()});it("(fn) : should toggle classes returned from the function",function(){var e=$(food);$(".apple",e).addClass("fruit");$(".carrot",e).addClass("vegetable");expect($(".apple",e).hasClass("fruit")).to.be.ok();expect($(".apple",e).hasClass("vegetable")).to.not.be.ok();expect($(".orange",e).hasClass("fruit")).to.not.be.ok();expect($(".orange",e).hasClass("vegetable")).to.not.be.ok();expect($(".carrot",e).hasClass("fruit")).to.not.be.ok();expect($(".carrot",e).hasClass("vegetable")).to.be.ok();expect($(".sweetcorn",e).hasClass("fruit")).to.not.be.ok();expect($(".sweetcorn",e).hasClass("vegetable")).to.not.be.ok();$("li",e).toggleClass(function(e,t,n){return $(this).parent().is("#fruits")?"fruit":"vegetable"});expect($(".apple",e).hasClass("fruit")).to.not.be.ok();expect($(".apple",e).hasClass("vegetable")).to.not.be.ok();expect($(".orange",e).hasClass("fruit")).to.be.ok();expect($(".orange",e).hasClass("vegetable")).to.not.be.ok();expect($(".carrot",e).hasClass("fruit")).to.not.be.ok();expect($(".carrot",e).hasClass("vegetable")).to.not.be.ok();expect($(".sweetcorn",e).hasClass("fruit")).to.not.be.ok();expect($(".sweetcorn",e).hasClass("vegetable")).to.be.ok()})});describe(".is",function(){it("() : should return false",function(){expect($("li.apple",fruits).is()).to.be(!1)});it("(true selector) : should return true",function(){expect($("#vegetables",vegetables).is("ul")).to.be(!0)});it("(false selector) : should return false",function(){expect($("#vegetables",vegetables).is("div")).to.be(!1)});it("(true selection) : should return true",function(){var e=$("li",vegetables);expect(e.is(e.eq(1))).to.be(!0)});it("(false selection) : should return false",function(){var e=$(vegetables),t=e.find("li");expect(t.is(e)).to.be(!1)});it("(true element) : should return true",function(){var e=$("li",vegetables);expect(e.is(e[0])).to.be(!0)});it("(false element) : should return false",function(){var e=$(vegetables),t=e.find("li");expect(t.is(e[0])).to.be(!1)});it("(true predicate) : should return true",function(){var e=$("li",fruits).is(function(){return this.hasClass("pear")});expect(e).to.be(!0)});it("(false predicate) : should return false",function(){var e=$("li",fruits).last().is(function(){return this.name==="ul"});expect(e).to.be(!1)})})});