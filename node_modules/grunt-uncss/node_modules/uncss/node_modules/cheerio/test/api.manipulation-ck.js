var expect=require("expect.js"),$=require("../"),fruits=require("./fixtures").fruits;describe("$(...)",function(){describe(".append",function(){it("() : should do nothing",function(){expect($("#fruits",fruits).append()[0].name).to.equal("ul")});it("(html) : should add element as last child",function(){var e=$(fruits);e.append('<li class="plum">Plum</li>');expect(e.children(3).hasClass("plum")).to.be.ok()});it("($(...)) : should add element as last child",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>');e.append(t);expect(e.children(3).hasClass("plum")).to.be.ok()});it("(Node) : should add element as last child",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>')[0];e.append(t);expect(e.children(3).hasClass("plum")).to.be.ok()});it("($(...), html) : should add multiple elements as last children",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>'),n='<li class="grape">Grape</li>';e.append(t,n);expect(e.children(3).hasClass("plum")).to.be.ok();expect(e.children(4).hasClass("grape")).to.be.ok()});it("(Array) : should append all elements in the array",function(){var e=$(fruits),t=$('<li class="plum">Plum</li><li class="grape">Grape</li>').toArray();e.append(t);expect(e.children(3).hasClass("plum")).to.be.ok();expect(e.children(4).hasClass("grape")).to.be.ok()});it("(fn) : should invoke the callback with the correct argument and context",function(){var e=$(fruits).children(),t=[],n=[];e.append(function(){t.push(arguments);n.push(this)});expect(t).to.eql([[0,"Apple"],[1,"Orange"],[2,"Pear"]]);expect(n).to.eql([e[0],e[1],e[2]])});it("(fn) : should add returned string as last child",function(){var e=$(fruits).children(),t,n,r;e.append(function(){return'<div class="first">'});t=e.eq(0);n=e.eq(1);r=e.eq(2);expect(t.find(".first")[0]).to.equal(t.contents()[1]);expect(n.find(".first")[0]).to.equal(n.contents()[1]);expect(r.find(".first")[0]).to.equal(r.contents()[1])});it("(fn) : should add returned Cheerio object as last child",function(){var e=$(fruits).children(),t,n,r;e.append(function(){return $('<div class="second">')});t=e.eq(0);n=e.eq(1);r=e.eq(2);expect(t.find(".second")[0]).to.equal(t.contents()[1]);expect(n.find(".second")[0]).to.equal(n.contents()[1]);expect(r.find(".second")[0]).to.equal(r.contents()[1])});it("(fn) : should add returned Node as last child",function(){var e=$(fruits).children(),t,n,r;e.append(function(){return $('<div class="third">')[0]});t=e.eq(0);n=e.eq(1);r=e.eq(2);expect(t.find(".third")[0]).to.equal(t.contents()[1]);expect(n.find(".third")[0]).to.equal(n.contents()[1]);expect(r.find(".third")[0]).to.equal(r.contents()[1])});it("should maintain correct object state (Issue: #10)",function(){var e=$("<div></div>").append("<div><div></div></div>").children().children().parent();expect(e).to.be.ok()})});describe(".prepend",function(){it("() : should do nothing",function(){expect($("#fruits",fruits).prepend()[0].name).to.equal("ul")});it("(html) : should add element as first child",function(){var e=$(fruits);e.prepend('<li class="plum">Plum</li>');expect(e.children(0).hasClass("plum")).to.be.ok()});it("($(...)) : should add element as first child",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>');e.prepend(t);expect(e.children(0).hasClass("plum")).to.be.ok()});it("(Node) : should add node as first child",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>')[0];e.prepend(t);expect(e.children(0).hasClass("plum")).to.be.ok()});it("(Array) : should add all elements in the array as inital children",function(){var e=$(fruits),t=$('<li class="plum">Plum</li><li class="grape">Grape</li>').toArray();e.prepend(t);expect(e.children(0).hasClass("plum")).to.be.ok();expect(e.children(1).hasClass("grape")).to.be.ok()});it("(html, $(...), html) : should add multiple elements as first children",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>'),n='<li class="grape">Grape</li>';e.prepend(t,n);expect(e.children(0).hasClass("plum")).to.be.ok();expect(e.children(1).hasClass("grape")).to.be.ok()});it("(fn) : should invoke the callback with the correct argument and context",function(){var e=$(fruits).children(),t=[],n=[];e.prepend(function(){t.push(arguments);n.push(this)});expect(t).to.eql([[0,"Apple"],[1,"Orange"],[2,"Pear"]]);expect(n).to.eql([e[0],e[1],e[2]])});it("(fn) : should add returned string as first child",function(){var e=$(fruits).children(),t,n,r;e.prepend(function(){return'<div class="first">'});t=e.eq(0);n=e.eq(1);r=e.eq(2);expect(t.find(".first")[0]).to.equal(t.contents()[0]);expect(n.find(".first")[0]).to.equal(n.contents()[0]);expect(r.find(".first")[0]).to.equal(r.contents()[0])});it("(fn) : should add returned Cheerio object as first child",function(){var e=$(fruits).children(),t,n,r;e.prepend(function(){return $('<div class="second">')});t=e.eq(0);n=e.eq(1);r=e.eq(2);expect(t.find(".second")[0]).to.equal(t.contents()[0]);expect(n.find(".second")[0]).to.equal(n.contents()[0]);expect(r.find(".second")[0]).to.equal(r.contents()[0])});it("(fn) : should add returned Node as first child",function(){var e=$(fruits).children(),t,n,r;e.prepend(function(){return $('<div class="third">')[0]});t=e.eq(0);n=e.eq(1);r=e.eq(2);expect(t.find(".third")[0]).to.equal(t.contents()[0]);expect(n.find(".third")[0]).to.equal(n.contents()[0]);expect(r.find(".third")[0]).to.equal(r.contents()[0])})});describe(".after",function(){it("() : should do nothing",function(){expect($("#fruits",fruits).after()[0].name).to.equal("ul")});it("(html) : should add element as next sibling",function(){var e=$(fruits),t='<li class="grape">Grape</li>';$(".apple",e).after(t);expect($(".apple",e).next().hasClass("grape")).to.be.ok()});it("(Array) : should add all elements in the array as next sibling",function(){var e=$(fruits),t=$('<li class="plum">Plum</li><li class="grape">Grape</li>').toArray();$(".apple",e).after(t);expect(e.children(1).hasClass("plum")).to.be.ok();expect(e.children(2).hasClass("grape")).to.be.ok()});it("($(...)) : should add element as next sibling",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>');$(".apple",e).after(t);expect($(".apple",e).next().hasClass("plum")).to.be.ok()});it("(Node) : should add element as next sibling",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>')[0];$(".apple",e).after(t);expect($(".apple",e).next().hasClass("plum")).to.be.ok()});it("($(...), html) : should add multiple elements as next siblings",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>'),n='<li class="grape">Grape</li>';$(".apple",e).after(t,n);expect($(".apple",e).next().hasClass("plum")).to.be.ok();expect($(".plum",e).next().hasClass("grape")).to.be.ok()});it("(fn) : should invoke the callback with the correct argument and context",function(){var e=$(fruits).children(),t=[],n=[];e.after(function(){t.push(arguments);n.push(this)});expect(t).to.eql([[0],[1],[2]]);expect(n).to.eql([e[0],e[1],e[2]])});it("(fn) : should add returned string as next sibling",function(){var e=$(fruits),t=e.children();t.after(function(){return'<li class="first">'});expect(e.find(".first")[0]).to.equal(e.contents()[1]);expect(e.find(".first")[1]).to.equal(e.contents()[3]);expect(e.find(".first")[2]).to.equal(e.contents()[5])});it("(fn) : should add returned Cheerio object as next sibling",function(){var e=$(fruits),t=e.children();t.after(function(){return $('<li class="second">')});expect(e.find(".second")[0]).to.equal(e.contents()[1]);expect(e.find(".second")[1]).to.equal(e.contents()[3]);expect(e.find(".second")[2]).to.equal(e.contents()[5])});it("(fn) : should add returned element as next sibling",function(){var e=$(fruits),t=e.children();t.after(function(){return $('<li class="third">')[0]});expect(e.find(".third")[0]).to.equal(e.contents()[1]);expect(e.find(".third")[1]).to.equal(e.contents()[3]);expect(e.find(".third")[2]).to.equal(e.contents()[5])})});describe(".before",function(){it("() : should do nothing",function(){expect($("#fruits",fruits).before()[0].name).to.equal("ul")});it("(html) : should add element as previous sibling",function(){var e=$(fruits),t='<li class="grape">Grape</li>';$(".apple",e).before(t);expect($(".apple",e).prev().hasClass("grape")).to.be.ok()});it("($(...)) : should add element as previous sibling",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>');$(".apple",e).before(t);expect($(".apple",e).prev().hasClass("plum")).to.be.ok()});it("(Node) : should add element as previous sibling",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>');$(".apple",e).before(t);expect($(".apple",e).prev().hasClass("plum")).to.be.ok()});it("(Array) : should add all elements in the array as previous sibling",function(){var e=$(fruits),t=$('<li class="plum">Plum</li><li class="grape">Grape</li>').toArray();$(".apple",e).before(t);expect(e.children(0).hasClass("plum")).to.be.ok();expect(e.children(1).hasClass("grape")).to.be.ok()});it("($(...), html) : should add multiple elements as previous siblings",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>'),n='<li class="grape">Grape</li>';$(".apple",e).before(t,n);expect($(".apple",e).prev().hasClass("grape")).to.be.ok();expect($(".grape",e).prev().hasClass("plum")).to.be.ok()});it("(fn) : should invoke the callback with the correct argument and context",function(){var e=$(fruits).children(),t=[],n=[];e.before(function(){t.push(arguments);n.push(this)});expect(t).to.eql([[0],[1],[2]]);expect(n).to.eql([e[0],e[1],e[2]])});it("(fn) : should add returned string as previous sibling",function(){var e=$(fruits),t=e.children();t.before(function(){return'<li class="first">'});expect(e.find(".first")[0]).to.equal(e.contents()[0]);expect(e.find(".first")[1]).to.equal(e.contents()[2]);expect(e.find(".first")[2]).to.equal(e.contents()[4])});it("(fn) : should add returned Cheerio object as previous sibling",function(){var e=$(fruits),t=e.children();t.before(function(){return $('<li class="second">')});expect(e.find(".second")[0]).to.equal(e.contents()[0]);expect(e.find(".second")[1]).to.equal(e.contents()[2]);expect(e.find(".second")[2]).to.equal(e.contents()[4])});it("(fn) : should add returned Node as previous sibling",function(){var e=$(fruits),t=e.children();t.before(function(){return $('<li class="third">')[0]});expect(e.find(".third")[0]).to.equal(e.contents()[0]);expect(e.find(".third")[1]).to.equal(e.contents()[2]);expect(e.find(".third")[2]).to.equal(e.contents()[4])})});describe(".remove",function(){it("() : should remove selected elements",function(){var e=$(fruits);$(".apple",e).remove();expect(e.find(".apple")).to.have.length(0)});it("(selector) : should remove matching selected elements",function(){var e=$(fruits);$("li",e).remove(".apple");expect(e.find(".apple")).to.have.length(0)})});describe(".replaceWith",function(){it("(elem) : should replace one <li> tag with another",function(){var e=$(fruits),t=$('<li class="plum">Plum</li>');$(".pear",e).replaceWith(t);expect($(".orange",e).next().hasClass("plum")).to.be.ok();expect($(".orange",e).next().html()).to.equal("Plum")});it("(Array) : should replace one <li> tag with the elements in the array",function(){var e=$(fruits),t=$('<li class="plum">Plum</li><li class="grape">Grape</li>').toArray();$(".pear",e).replaceWith(t);expect(e.children(2).hasClass("plum")).to.be.ok();expect(e.children(3).hasClass("grape")).to.be.ok()});it("(elem) : should replace the selected element with given element",function(){var e=$("<ul></ul>"),t=$("<h2>hi <span>there</span></h2>"),n=e.replaceWith(t);expect(n[0].parent.type).to.equal("root");expect($.html(n[0].parent)).to.equal("<h2>hi <span>there</span></h2>");expect($.html(n)).to.equal("<ul></ul>")});it("(Node) : should replace the selected element with given element",function(){var e=$("<ul></ul>"),t=$("<h2>hi <span>there</span></h2>"),n=e.replaceWith(t);expect(n[0].parent.type).to.equal("root");expect($.html(n[0].parent)).to.equal("<h2>hi <span>there</span></h2>");expect($.html(n)).to.equal("<ul></ul>")});it("(elem) : should replace the single selected element with given element",function(){var e=$("<br/>"),t=$("<h2>hi <span>there</span></h2>"),n=e.replaceWith(t);expect(n[0].parent.type).to.equal("root");expect($.html(n[0].parent)).to.equal("<h2>hi <span>there</span></h2>");expect($.html(n)).to.equal("<br>")});it("(str) : should accept strings",function(){var e=$("<br/>"),t=e.replaceWith("<h2>hi <span>there</span></h2>");expect(t[0].parent.type).to.equal("root");expect($.html(t[0].parent)).to.equal("<h2>hi <span>there</span></h2>");expect($.html(t)).to.equal("<br>")});it("(fn) : should invoke the callback with the correct argument and context",function(){var e=$(fruits),t=e.children().toArray(),n=[],r=[];e.children().replaceWith(function(){n.push(arguments);r.push(this);return'<li class="first">'});expect(n).to.eql([[0],[1],[2]]);expect(r).to.eql([t[0],t[1],t[2]])});it("(fn) : should replace the selected element with the returned string",function(){var e=$(fruits);e.children().replaceWith(function(){return'<li class="first">'});expect(e.find(".first")).to.have.length(3)});it("(fn) : should replace the selected element with the returned Cheerio object",function(){var e=$(fruits);e.children().replaceWith(function(){return $('<li class="second">')});expect(e.find(".second")).to.have.length(3)});it("(fn) : should replace the selected element with the returned node",function(){var e=$(fruits);e.children().replaceWith(function(){return $('<li class="third">')[0]});expect(e.find(".third")).to.have.length(3)})});describe(".empty",function(){it("() : should remove all children from selected elements",function(){var e=$(fruits);$("#fruits",e).empty();expect($("#fruits",e).children()).to.have.length(0)})});describe(".html",function(){it("() : should get the innerHTML for an element",function(){var e=$(fruits);expect(e.html()).to.equal(['<li class="apple">Apple</li>','<li class="orange">Orange</li>','<li class="pear">Pear</li>'].join(""))});it("() : should get innerHTML even if its just text",function(){var e='<li class="pear">Pear</li>';expect($(".pear",e).html()).to.equal("Pear")});it("() : should return empty string if nothing inside",function(){var e="<li></li>";expect($("li",e).html()).to.equal("")});it("(html) : should set the html for its children",function(){var e=$(fruits);e.html('<li class="durian">Durian</li>');var t=e.html();expect(t).to.equal('<li class="durian">Durian</li>')});it("(elem) : should set the html for its children with element",function(){var e=$(fruits);e.html($('<li class="durian">Durian</li>'));var t=e.html();expect(t).to.equal('<li class="durian">Durian</li>')})});describe(".toString",function(){it("() : should get the outerHTML for an element",function(){var e=$(fruits);expect(e.toString()).to.equal(fruits)});it("() : should return an html string for a set of elements",function(){var e=$(fruits);expect(e.find("li").toString()).to.equal('<li class="apple">Apple</li><li class="orange">Orange</li><li class="pear">Pear</li>')});it("() : should be called implicitly",function(){var e=[$("<foo>"),$("<bar>"),$("<baz>")].join("");expect(e).to.equal("<foo></foo><bar></bar><baz></baz>")})});describe(".text",function(){it("() : gets the text for a single element",function(){expect($(".apple",fruits).text()).to.equal("Apple")});it("() : combines all text from children text nodes",function(){expect($("#fruits",fruits).text()).to.equal("AppleOrangePear")});it("(text) : sets the text for the child node",function(){var e=$(fruits);$(".apple",e).text("Granny Smith Apple");expect($(".apple",e)[0].children[0].data).to.equal("Granny Smith Apple")});it("should allow functions as arguments",function(){var e=$(fruits);$(".apple",e).text(function(e,t){expect(e).to.equal(0);expect(t).to.equal("Apple");return"whatever mate"});expect($(".apple",e)[0].children[0].data).to.equal("whatever mate")});it("should decode special chars",function(){var e=$("<p>M&amp;M</p>").text();expect(e).to.equal("M&M")});it("should work with special chars added as strings",function(){var e=$("<p>M&M</p>").text();expect(e).to.equal("M&M")});it("( undefined ) : should act as an accessor",function(){var e=$("<div>test</div>");expect(e.text(undefined)).to.be.a("string");expect(e.text()).to.be("test")});it('( "" ) : should convert to string',function(){var e=$("<div>test</div>");expect(e.text("").text()).to.equal("")});it("( null ) : should convert to string",function(){expect($("<div>").text(null).text()).to.equal("null")});it("( 0 ) : should convert to string",function(){expect($("<div>").text(0).text()).to.equal("0")});it("(str) should encode then decode unsafe characters",function(){var e=$(".apple",fruits);e.text('blah <script>alert("XSS!")</script> blah');expect(e[0].children[0].data).to.equal("blah &lt;script&gt;alert(&quot;XSS!&quot;)&lt;/script&gt; blah");expect(e.text()).to.equal('blah <script>alert("XSS!")</script> blah');e.text('blah <script>alert("XSS!")</script> blah');expect(e.html()).to.not.contain('<script>alert("XSS!")</script>')})})});