var expect=require("expect.js"),parse=require("../lib/parse"),render=require("../lib/render"),html=function(e,t){t=t||{};var n=parse(e,t);return render(n)};describe("render",function(){describe("(html)",function(){it("should render <br /> tags correctly",function(){var e="<br />";expect(html(e)).to.equal("<br>")});it("should handle double quotes within single quoted attributes properly",function(){var e="<hr class='an \"edge\" case' />";expect(html(e)).to.equal('<hr class="an &quot;edge&quot; case">')});it("should retain encoded HTML content within attributes",function(){var e='<hr class="cheerio &amp; node = happy parsing" />';expect(html(e)).to.equal('<hr class="cheerio &amp; node = happy parsing">')});it('should shorten the "checked" attribute when it contains the value "checked"',function(){var e="<input checked/>";expect(html(e)).to.equal("<input checked>")});it('should not shorten the "name" attribute when it contains the value "name"',function(){var e='<input name="name"/>';expect(html(e)).to.equal('<input name="name">')});it("should render comments correctly",function(){var e="<!-- comment -->";expect(html(e)).to.equal("<!-- comment -->")});it("should render whitespace by default",function(){var e='<a href="./haha.html">hi</a> <a href="./blah.html">blah</a>';expect(html(e)).to.equal(e)});it("should ignore whitespace if specified",function(){var e='<a href="./haha.html">hi</a> <a href="./blah.html">blah  </a>';expect(html(e,{ignoreWhitespace:!0})).to.equal('<a href="./haha.html">hi</a><a href="./blah.html">blah  </a>')});it("should preserve multiple hyphens in data attributes",function(){var e='<div data-foo-bar-baz="value"></div>';expect(html(e)).to.equal('<div data-foo-bar-baz="value"></div>')})})});