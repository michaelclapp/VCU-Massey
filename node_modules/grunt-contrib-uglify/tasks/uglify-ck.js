/*
 * grunt-contrib-uglify
 * http://gruntjs.com/
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman, contributors
 * Licensed under the MIT license.
 */"use strict";module.exports=function(e){var t=require("grunt-lib-contrib").init(e),n=require("./lib/uglify").init(e);e.registerMultiTask("uglify","Minify files with UglifyJS.",function(){var r=this.options({banner:"",footer:"",compress:{warnings:!1},mangle:{},beautify:!1,report:!1}),i=e.template.process(r.banner),s=e.template.process(r.footer),o,u,a;this.files.forEach(function(f){var l=f.src.filter(function(t){if(!e.file.exists(t)){e.log.warn('Source file "'+t+'" not found.');return!1}return!0});if(l.length===0){e.log.warn("Destination ("+f.dest+") not written because src files were empty.");return}typeof r.sourceMap=="function"&&(o=r.sourceMap);if(typeof r.sourceMapIn=="function"){l.length!==1&&e.fail.warn("Cannot generate `sourceMapIn` for multiple source files.");u=r.sourceMapIn}typeof r.sourceMappingURL=="function"&&(a=r.sourceMappingURL);if(o)try{r.sourceMap=o(f.dest)}catch(c){var h=new Error("SourceMapName failed.");h.origError=c;e.fail.warn(h)}if(u)try{r.sourceMapIn=u(l[0])}catch(c){var h=new Error("SourceMapInName failed.");h.origError=c;e.fail.warn(h)}if(a)try{r.sourceMappingURL=a(f.dest)}catch(c){var h=new Error("SourceMappingURL failed.");h.origError=c;e.fail.warn(h)}var p;try{p=n.minify(l,f.dest,r)}catch(c){console.log(c);var h=new Error("Uglification failed.");if(c.message){h.message+="\n"+c.message+". \n";c.line&&(h.message+="Line "+c.line+" in "+l+"\n")}h.origError=c;e.log.warn('Uglifying source "'+l+'" failed.');e.fail.warn(h)}var d=p.min+s;r.sourceMap||(d=i+d);e.file.write(f.dest,d);if(r.sourceMap){e.file.write(r.sourceMap,p.sourceMap);e.log.writeln('Source Map "'+r.sourceMap+'" created.')}e.log.writeln('File "'+f.dest+'" created.');r.report&&t.minMaxInfo(d,p.max,r.report)})})};