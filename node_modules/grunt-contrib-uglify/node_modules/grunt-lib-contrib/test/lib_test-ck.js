var grunt=require("grunt"),helper=require("../lib/contrib.js").init(grunt);exports.lib={getNamespaceDeclaration:function(e){"use strict";e.expect(10);var t={namespace:'this["JST"]',declaration:'this["JST"] = this["JST"] || {};'},n=helper.getNamespaceDeclaration("this.JST");e.equal(t.namespace,n.namespace,"namespace with square brackets incorrect");e.equal(t.declaration,n.declaration,"namespace declaration with square brackets incorrect");n=helper.getNamespaceDeclaration("JST");e.equal(t.namespace,n.namespace,"namespace with square brackets incorrect");e.equal(t.declaration,n.declaration,"namespace declaration with square brackets incorrect");t={namespace:"this",declaration:""};n=helper.getNamespaceDeclaration("this");e.equal(t.namespace,n.namespace,"namespace with square brackets incorrect");e.equal(t.declaration,n.declaration,"namespace declaration with square brackets incorrect");t={namespace:'this["GUI"]["Templates"]["Main"]',declaration:'this["GUI"] = this["GUI"] || {};\nthis["GUI"]["Templates"] = this["GUI"]["Templates"] || {};\nthis["GUI"]["Templates"]["Main"] = this["GUI"]["Templates"]["Main"] || {};'};n=helper.getNamespaceDeclaration("GUI.Templates.Main");e.equal(t.namespace,n.namespace,"namespace incorrect");e.equal(t.declaration,n.declaration,"namespace declaration incorrect");t={namespace:'this["main"]["[test]"]["[test2]"]',declaration:'this["main"] = this["main"] || {};\nthis["main"]["[test]"] = this["main"]["[test]"] || {};\nthis["main"]["[test]"]["[test2]"] = this["main"]["[test]"]["[test2]"] || {};'};n=helper.getNamespaceDeclaration("main.[test].[test2]");e.equal(t.namespace,n.namespace,"namespace with square brackets incorrect");e.equal(t.declaration,n.declaration,"namespace declaration with square brackets incorrect");e.done()},optsToArgs:function(e){"use strict";e.expect(1);var t={key:"a",key2:1,key3:!0,key4:!1,key5:["a","b"]},n=["--key","a","--key2","1","--key3","--key5","a","--key5","b"].toString(),r=helper.optsToArgs(t).toString();e.equal(n,r,"should convert object to array of CLI arguments");e.done()},stripPath:function(e){"use strict";var t=require("path");e.expect(4);var n=helper.stripPath("path1/path2","path1"),r="path2";e.equal(r,n,"should strip path from a directory path and trim it.");n=helper.stripPath("path1/path2/path3/path4","path1/path2");r=t.normalize("path3/path4");e.equal(r,n,"should strip path from a directory path and trim it. (deep)");n=helper.stripPath("path1/file.ext","path1");r="file.ext";e.equal(r,n,"should strip path from a file path and trim it.");n=helper.stripPath("path1/path2/path3/path4/file.ext","path1/path2");r=t.normalize("path3/path4/file.ext");e.equal(r,n,"should strip path from a file path and trim it. (deep)");e.done()},minMaxInfo:function(e){"use strict";e.expect(3);var t=(new Array(100)).join("blah "),n=t.replace(/\s+/g,""),r,i;grunt.util.hooker.hook(grunt.log,"writeln",{pre:function(e){r+=grunt.log.uncolor(e)+grunt.util.linefeed;return grunt.util.hooker.preempt()}});grunt.util.hooker.hook(grunt.log,"write",{pre:function(e){r+=grunt.log.uncolor(e);return grunt.util.hooker.preempt()}});r="";i="";helper.minMaxInfo(n,t);e.equal(i,r,"should not have reported min and max info.");r="";i=["Original: 495 bytes.","Minified: 396 bytes."].join(grunt.util.linefeed)+grunt.util.linefeed;helper.minMaxInfo(n,t,"min");e.equal(i,r,"should have logged min and max info.");r="";i=["Original: 495 bytes.","Minified: 396 bytes.","Gzipped:  36 bytes."].join(grunt.util.linefeed)+grunt.util.linefeed;helper.minMaxInfo(n,t,"gzip");e.equal(i,r,"should have logged min, max, gzip info.");grunt.util.hooker.unhook(grunt.log,"writeln");grunt.util.hooker.unhook(grunt.log,"write");e.done()},formatToType:{amd:function(e){"use strict";e.expect(2);var t=function(){},n=helper.formatForType(t,"amd","JST","test"),r='JST["test"] = function () { };';e.equal(r,n,"should format string to amd with namespace");n=helper.formatForType(t,"amd");r="return function () { }";e.equal(r,n,"should format string to amd");e.done()},commonjs:function(e){"use strict";e.expect(2);var t=function(){},n=helper.formatForType(t,"commonjs","JST","test"),r='JST["test"] = function () { };';e.equal(r,n,"should format string to commonjs with namespace");n=helper.formatForType(t,"commonjs");r="module.exports = function () { }";e.equal(r,n,"should format string to commonjs");e.done()},js:function(e){"use strict";e.expect(2);var t=function(){},n=helper.formatForType(t,"js","JST","test"),r='JST["test"] = function () { };';e.equal(r,n,"should format string to js with namespace");n=helper.formatForType(t,"js");r="function () { }";e.equal(r,n,"should format string to js");e.done()},html:function(e){"use strict";e.expect(2);var t=function(){},n=helper.formatForType(t,"html","JST","test"),r="function () { }";e.equal(r,n,"should format string to html with namespace");n=helper.formatForType(t,"html");r="function () { }";e.equal(r,n,"should format string to html");e.done()}}};